schema {
  query: query_root
  mutation: mutation_root
  subscription: subscription_root
}

"""whether this query should be cached (Hasura Cloud only)"""
directive @cached(
  """refresh the cache entry"""
  refresh: Boolean! = false

  """measured in seconds"""
  ttl: Int! = 60
) on QUERY

"""
Boolean expression to compare columns of type "Boolean". All fields are combined with logical 'AND'.
"""
input Boolean_comparison_exp {
  _eq: Boolean
  _gt: Boolean
  _gte: Boolean
  _in: [Boolean!]
  _is_null: Boolean
  _lt: Boolean
  _lte: Boolean
  _neq: Boolean
  _nin: [Boolean!]
}

"""
Boolean expression to compare columns of type "Int". All fields are combined with logical 'AND'.
"""
input Int_comparison_exp {
  _eq: Int
  _gt: Int
  _gte: Int
  _in: [Int!]
  _is_null: Boolean
  _lt: Int
  _lte: Int
  _neq: Int
  _nin: [Int!]
}

"""
Boolean expression to compare columns of type "String". All fields are combined with logical 'AND'.
"""
input String_comparison_exp {
  _eq: String
  _gt: String
  _gte: String

  """does the column match the given case-insensitive pattern"""
  _ilike: String
  _in: [String!]

  """
  does the column match the given POSIX regular expression, case insensitive
  """
  _iregex: String
  _is_null: Boolean

  """does the column match the given pattern"""
  _like: String
  _lt: String
  _lte: String
  _neq: String

  """does the column NOT match the given case-insensitive pattern"""
  _nilike: String
  _nin: [String!]

  """
  does the column NOT match the given POSIX regular expression, case insensitive
  """
  _niregex: String

  """does the column NOT match the given pattern"""
  _nlike: String

  """
  does the column NOT match the given POSIX regular expression, case sensitive
  """
  _nregex: String

  """does the column NOT match the given SQL regular expression"""
  _nsimilar: String

  """
  does the column match the given POSIX regular expression, case sensitive
  """
  _regex: String

  """does the column match the given SQL regular expression"""
  _similar: String
}

scalar bigint

"""
Boolean expression to compare columns of type "bigint". All fields are combined with logical 'AND'.
"""
input bigint_comparison_exp {
  _eq: bigint
  _gt: bigint
  _gte: bigint
  _in: [bigint!]
  _is_null: Boolean
  _lt: bigint
  _lte: bigint
  _neq: bigint
  _nin: [bigint!]
}

"""ordering argument of a cursor"""
enum cursor_ordering {
  """ascending ordering of the cursor"""
  ASC

  """descending ordering of the cursor"""
  DESC
}

scalar date

"""
Boolean expression to compare columns of type "date". All fields are combined with logical 'AND'.
"""
input date_comparison_exp {
  _eq: date
  _gt: date
  _gte: date
  _in: [date!]
  _is_null: Boolean
  _lt: date
  _lte: date
  _neq: date
  _nin: [date!]
}

"""
columns and relationships of "feeds_feed"
"""
type feed {
  creation_date: timestamptz!
  id: bigint!
  modification_date: timestamptz!
  name: String!

  """An object relationship"""
  note: note

  """An array relationship"""
  plugin_instances(
    """distinct select on columns"""
    distinct_on: [plugin_instance_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [plugin_instance_order_by!]

    """filter the rows returned"""
    where: plugin_instance_bool_exp
  ): [plugin_instance!]!

  """An aggregate relationship"""
  plugin_instances_aggregate(
    """distinct select on columns"""
    distinct_on: [plugin_instance_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [plugin_instance_order_by!]

    """filter the rows returned"""
    where: plugin_instance_bool_exp
  ): plugin_instance_aggregate!
  public: Boolean!
}

"""
aggregated selection of "feeds_feed"
"""
type feed_aggregate {
  aggregate: feed_aggregate_fields
  nodes: [feed!]!
}

"""
aggregate fields of "feeds_feed"
"""
type feed_aggregate_fields {
  avg: feed_avg_fields
  count(columns: [feed_select_column!], distinct: Boolean): Int!
  max: feed_max_fields
  min: feed_min_fields
  stddev: feed_stddev_fields
  stddev_pop: feed_stddev_pop_fields
  stddev_samp: feed_stddev_samp_fields
  sum: feed_sum_fields
  var_pop: feed_var_pop_fields
  var_samp: feed_var_samp_fields
  variance: feed_variance_fields
}

"""aggregate avg on columns"""
type feed_avg_fields {
  id: Float
}

"""
Boolean expression to filter rows from the table "feeds_feed". All fields are combined with a logical 'AND'.
"""
input feed_bool_exp {
  _and: [feed_bool_exp!]
  _not: feed_bool_exp
  _or: [feed_bool_exp!]
  creation_date: timestamptz_comparison_exp
  id: bigint_comparison_exp
  modification_date: timestamptz_comparison_exp
  name: String_comparison_exp
  note: note_bool_exp
  plugin_instances: plugin_instance_bool_exp
  plugin_instances_aggregate: plugin_instance_aggregate_bool_exp
  public: Boolean_comparison_exp
}

"""
unique or primary key constraints on table "feeds_feed"
"""
enum feed_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  feeds_feed_pkey
}

"""
input type for incrementing numeric columns in table "feeds_feed"
"""
input feed_inc_input {
  id: bigint
}

"""
input type for inserting data into table "feeds_feed"
"""
input feed_insert_input {
  creation_date: timestamptz
  id: bigint
  modification_date: timestamptz
  name: String
  note: note_obj_rel_insert_input
  plugin_instances: plugin_instance_arr_rel_insert_input
  public: Boolean
}

"""aggregate max on columns"""
type feed_max_fields {
  creation_date: timestamptz
  id: bigint
  modification_date: timestamptz
  name: String
}

"""aggregate min on columns"""
type feed_min_fields {
  creation_date: timestamptz
  id: bigint
  modification_date: timestamptz
  name: String
}

"""
response of any mutation on the table "feeds_feed"
"""
type feed_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [feed!]!
}

"""
input type for inserting object relation for remote table "feeds_feed"
"""
input feed_obj_rel_insert_input {
  data: feed_insert_input!

  """upsert condition"""
  on_conflict: feed_on_conflict
}

"""
on_conflict condition type for table "feeds_feed"
"""
input feed_on_conflict {
  constraint: feed_constraint!
  update_columns: [feed_update_column!]! = []
  where: feed_bool_exp
}

"""Ordering options when selecting data from "feeds_feed"."""
input feed_order_by {
  creation_date: order_by
  id: order_by
  modification_date: order_by
  name: order_by
  note: note_order_by
  plugin_instances_aggregate: plugin_instance_aggregate_order_by
  public: order_by
}

"""primary key columns input for table: feeds_feed"""
input feed_pk_columns_input {
  id: bigint!
}

"""
select columns of table "feeds_feed"
"""
enum feed_select_column {
  """column name"""
  creation_date

  """column name"""
  id

  """column name"""
  modification_date

  """column name"""
  name

  """column name"""
  public
}

"""
input type for updating data in table "feeds_feed"
"""
input feed_set_input {
  creation_date: timestamptz
  id: bigint
  modification_date: timestamptz
  name: String
  public: Boolean
}

"""aggregate stddev on columns"""
type feed_stddev_fields {
  id: Float
}

"""aggregate stddev_pop on columns"""
type feed_stddev_pop_fields {
  id: Float
}

"""aggregate stddev_samp on columns"""
type feed_stddev_samp_fields {
  id: Float
}

"""
Streaming cursor of the table "feed"
"""
input feed_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: feed_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input feed_stream_cursor_value_input {
  creation_date: timestamptz
  id: bigint
  modification_date: timestamptz
  name: String
  public: Boolean
}

"""aggregate sum on columns"""
type feed_sum_fields {
  id: bigint
}

"""
update columns of table "feeds_feed"
"""
enum feed_update_column {
  """column name"""
  creation_date

  """column name"""
  id

  """column name"""
  modification_date

  """column name"""
  name

  """column name"""
  public
}

input feed_updates {
  """increments the numeric columns with given value of the filtered values"""
  _inc: feed_inc_input

  """sets the columns of the filtered rows to the given values"""
  _set: feed_set_input

  """filter the rows which have to be updated"""
  where: feed_bool_exp!
}

"""aggregate var_pop on columns"""
type feed_var_pop_fields {
  id: Float
}

"""aggregate var_samp on columns"""
type feed_var_samp_fields {
  id: Float
}

"""aggregate variance on columns"""
type feed_variance_fields {
  id: Float
}

"""
columns and relationships of "plugininstances_plugininstancefile"
"""
type file {
  creation_date: timestamptz!
  fname: String!
  id: bigint!
  plugin_inst_id: bigint!

  """An object relationship"""
  plugin_instance: plugin_instance!
}

"""
aggregated selection of "plugininstances_plugininstancefile"
"""
type file_aggregate {
  aggregate: file_aggregate_fields
  nodes: [file!]!
}

input file_aggregate_bool_exp {
  count: file_aggregate_bool_exp_count
}

input file_aggregate_bool_exp_count {
  arguments: [file_select_column!]
  distinct: Boolean
  filter: file_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "plugininstances_plugininstancefile"
"""
type file_aggregate_fields {
  avg: file_avg_fields
  count(columns: [file_select_column!], distinct: Boolean): Int!
  max: file_max_fields
  min: file_min_fields
  stddev: file_stddev_fields
  stddev_pop: file_stddev_pop_fields
  stddev_samp: file_stddev_samp_fields
  sum: file_sum_fields
  var_pop: file_var_pop_fields
  var_samp: file_var_samp_fields
  variance: file_variance_fields
}

"""
order by aggregate values of table "plugininstances_plugininstancefile"
"""
input file_aggregate_order_by {
  avg: file_avg_order_by
  count: order_by
  max: file_max_order_by
  min: file_min_order_by
  stddev: file_stddev_order_by
  stddev_pop: file_stddev_pop_order_by
  stddev_samp: file_stddev_samp_order_by
  sum: file_sum_order_by
  var_pop: file_var_pop_order_by
  var_samp: file_var_samp_order_by
  variance: file_variance_order_by
}

"""
input type for inserting array relation for remote table "plugininstances_plugininstancefile"
"""
input file_arr_rel_insert_input {
  data: [file_insert_input!]!

  """upsert condition"""
  on_conflict: file_on_conflict
}

"""aggregate avg on columns"""
type file_avg_fields {
  id: Float
  plugin_inst_id: Float
}

"""
order by avg() on columns of table "plugininstances_plugininstancefile"
"""
input file_avg_order_by {
  id: order_by
  plugin_inst_id: order_by
}

"""
Boolean expression to filter rows from the table "plugininstances_plugininstancefile". All fields are combined with a logical 'AND'.
"""
input file_bool_exp {
  _and: [file_bool_exp!]
  _not: file_bool_exp
  _or: [file_bool_exp!]
  creation_date: timestamptz_comparison_exp
  fname: String_comparison_exp
  id: bigint_comparison_exp
  plugin_inst_id: bigint_comparison_exp
  plugin_instance: plugin_instance_bool_exp
}

"""
unique or primary key constraints on table "plugininstances_plugininstancefile"
"""
enum file_constraint {
  """
  unique or primary key constraint on columns "fname"
  """
  plugininstances_plugininstancefile_fname_fc1d9d05_uniq

  """
  unique or primary key constraint on columns "id"
  """
  plugininstances_plugininstancefile_pkey
}

"""
input type for incrementing numeric columns in table "plugininstances_plugininstancefile"
"""
input file_inc_input {
  id: bigint
  plugin_inst_id: bigint
}

"""
input type for inserting data into table "plugininstances_plugininstancefile"
"""
input file_insert_input {
  creation_date: timestamptz
  fname: String
  id: bigint
  plugin_inst_id: bigint
  plugin_instance: plugin_instance_obj_rel_insert_input
}

"""aggregate max on columns"""
type file_max_fields {
  creation_date: timestamptz
  fname: String
  id: bigint
  plugin_inst_id: bigint
}

"""
order by max() on columns of table "plugininstances_plugininstancefile"
"""
input file_max_order_by {
  creation_date: order_by
  fname: order_by
  id: order_by
  plugin_inst_id: order_by
}

"""aggregate min on columns"""
type file_min_fields {
  creation_date: timestamptz
  fname: String
  id: bigint
  plugin_inst_id: bigint
}

"""
order by min() on columns of table "plugininstances_plugininstancefile"
"""
input file_min_order_by {
  creation_date: order_by
  fname: order_by
  id: order_by
  plugin_inst_id: order_by
}

"""
response of any mutation on the table "plugininstances_plugininstancefile"
"""
type file_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [file!]!
}

"""
on_conflict condition type for table "plugininstances_plugininstancefile"
"""
input file_on_conflict {
  constraint: file_constraint!
  update_columns: [file_update_column!]! = []
  where: file_bool_exp
}

"""
Ordering options when selecting data from "plugininstances_plugininstancefile".
"""
input file_order_by {
  creation_date: order_by
  fname: order_by
  id: order_by
  plugin_inst_id: order_by
  plugin_instance: plugin_instance_order_by
}

"""
primary key columns input for table: plugininstances_plugininstancefile
"""
input file_pk_columns_input {
  id: bigint!
}

"""
select columns of table "plugininstances_plugininstancefile"
"""
enum file_select_column {
  """column name"""
  creation_date

  """column name"""
  fname

  """column name"""
  id

  """column name"""
  plugin_inst_id
}

"""
input type for updating data in table "plugininstances_plugininstancefile"
"""
input file_set_input {
  creation_date: timestamptz
  fname: String
  id: bigint
  plugin_inst_id: bigint
}

"""aggregate stddev on columns"""
type file_stddev_fields {
  id: Float
  plugin_inst_id: Float
}

"""
order by stddev() on columns of table "plugininstances_plugininstancefile"
"""
input file_stddev_order_by {
  id: order_by
  plugin_inst_id: order_by
}

"""aggregate stddev_pop on columns"""
type file_stddev_pop_fields {
  id: Float
  plugin_inst_id: Float
}

"""
order by stddev_pop() on columns of table "plugininstances_plugininstancefile"
"""
input file_stddev_pop_order_by {
  id: order_by
  plugin_inst_id: order_by
}

"""aggregate stddev_samp on columns"""
type file_stddev_samp_fields {
  id: Float
  plugin_inst_id: Float
}

"""
order by stddev_samp() on columns of table "plugininstances_plugininstancefile"
"""
input file_stddev_samp_order_by {
  id: order_by
  plugin_inst_id: order_by
}

"""
Streaming cursor of the table "file"
"""
input file_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: file_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input file_stream_cursor_value_input {
  creation_date: timestamptz
  fname: String
  id: bigint
  plugin_inst_id: bigint
}

"""aggregate sum on columns"""
type file_sum_fields {
  id: bigint
  plugin_inst_id: bigint
}

"""
order by sum() on columns of table "plugininstances_plugininstancefile"
"""
input file_sum_order_by {
  id: order_by
  plugin_inst_id: order_by
}

"""
update columns of table "plugininstances_plugininstancefile"
"""
enum file_update_column {
  """column name"""
  creation_date

  """column name"""
  fname

  """column name"""
  id

  """column name"""
  plugin_inst_id
}

input file_updates {
  """increments the numeric columns with given value of the filtered values"""
  _inc: file_inc_input

  """sets the columns of the filtered rows to the given values"""
  _set: file_set_input

  """filter the rows which have to be updated"""
  where: file_bool_exp!
}

"""aggregate var_pop on columns"""
type file_var_pop_fields {
  id: Float
  plugin_inst_id: Float
}

"""
order by var_pop() on columns of table "plugininstances_plugininstancefile"
"""
input file_var_pop_order_by {
  id: order_by
  plugin_inst_id: order_by
}

"""aggregate var_samp on columns"""
type file_var_samp_fields {
  id: Float
  plugin_inst_id: Float
}

"""
order by var_samp() on columns of table "plugininstances_plugininstancefile"
"""
input file_var_samp_order_by {
  id: order_by
  plugin_inst_id: order_by
}

"""aggregate variance on columns"""
type file_variance_fields {
  id: Float
  plugin_inst_id: Float
}

"""
order by variance() on columns of table "plugininstances_plugininstancefile"
"""
input file_variance_order_by {
  id: order_by
  plugin_inst_id: order_by
}

"""mutation root"""
type mutation_root {
  """
  delete data from the table: "feeds_feed"
  """
  delete_feed(
    """filter the rows which have to be deleted"""
    where: feed_bool_exp!
  ): feed_mutation_response

  """
  delete single row from the table: "feeds_feed"
  """
  delete_feed_by_pk(id: bigint!): feed

  """
  delete data from the table: "plugininstances_plugininstancefile"
  """
  delete_file(
    """filter the rows which have to be deleted"""
    where: file_bool_exp!
  ): file_mutation_response

  """
  delete single row from the table: "plugininstances_plugininstancefile"
  """
  delete_file_by_pk(id: bigint!): file

  """
  delete data from the table: "feeds_note"
  """
  delete_note(
    """filter the rows which have to be deleted"""
    where: note_bool_exp!
  ): note_mutation_response

  """
  delete single row from the table: "feeds_note"
  """
  delete_note_by_pk(id: bigint!): note

  """
  delete data from the table: "pacsfiles_pacsfile"
  """
  delete_pacsfile(
    """filter the rows which have to be deleted"""
    where: pacsfile_bool_exp!
  ): pacsfile_mutation_response

  """
  delete single row from the table: "pacsfiles_pacsfile"
  """
  delete_pacsfile_by_pk(id: bigint!): pacsfile

  """
  delete data from the table: "pipelines_pipeline"
  """
  delete_pipeline(
    """filter the rows which have to be deleted"""
    where: pipeline_bool_exp!
  ): pipeline_mutation_response

  """
  delete single row from the table: "pipelines_pipeline"
  """
  delete_pipeline_by_pk(id: bigint!): pipeline

  """
  delete data from the table: "plugininstances_plugininstance"
  """
  delete_plugin_instance(
    """filter the rows which have to be deleted"""
    where: plugin_instance_bool_exp!
  ): plugin_instance_mutation_response

  """
  delete single row from the table: "plugininstances_plugininstance"
  """
  delete_plugin_instance_by_pk(id: bigint!): plugin_instance

  """
  delete data from the table: "plugins_plugin"
  """
  delete_plugins_plugin(
    """filter the rows which have to be deleted"""
    where: plugins_plugin_bool_exp!
  ): plugins_plugin_mutation_response

  """
  delete single row from the table: "plugins_plugin"
  """
  delete_plugins_plugin_by_pk(id: bigint!): plugins_plugin

  """
  delete data from the table: "plugins_pluginmeta"
  """
  delete_plugins_pluginmeta(
    """filter the rows which have to be deleted"""
    where: plugins_pluginmeta_bool_exp!
  ): plugins_pluginmeta_mutation_response

  """
  delete single row from the table: "plugins_pluginmeta"
  """
  delete_plugins_pluginmeta_by_pk(id: bigint!): plugins_pluginmeta

  """
  delete data from the table: "workflows_workflow"
  """
  delete_workflow(
    """filter the rows which have to be deleted"""
    where: workflow_bool_exp!
  ): workflow_mutation_response

  """
  delete single row from the table: "workflows_workflow"
  """
  delete_workflow_by_pk(id: bigint!): workflow

  """
  insert data into the table: "feeds_feed"
  """
  insert_feed(
    """the rows to be inserted"""
    objects: [feed_insert_input!]!

    """upsert condition"""
    on_conflict: feed_on_conflict
  ): feed_mutation_response

  """
  insert a single row into the table: "feeds_feed"
  """
  insert_feed_one(
    """the row to be inserted"""
    object: feed_insert_input!

    """upsert condition"""
    on_conflict: feed_on_conflict
  ): feed

  """
  insert data into the table: "plugininstances_plugininstancefile"
  """
  insert_file(
    """the rows to be inserted"""
    objects: [file_insert_input!]!

    """upsert condition"""
    on_conflict: file_on_conflict
  ): file_mutation_response

  """
  insert a single row into the table: "plugininstances_plugininstancefile"
  """
  insert_file_one(
    """the row to be inserted"""
    object: file_insert_input!

    """upsert condition"""
    on_conflict: file_on_conflict
  ): file

  """
  insert data into the table: "feeds_note"
  """
  insert_note(
    """the rows to be inserted"""
    objects: [note_insert_input!]!

    """upsert condition"""
    on_conflict: note_on_conflict
  ): note_mutation_response

  """
  insert a single row into the table: "feeds_note"
  """
  insert_note_one(
    """the row to be inserted"""
    object: note_insert_input!

    """upsert condition"""
    on_conflict: note_on_conflict
  ): note

  """
  insert data into the table: "pacsfiles_pacsfile"
  """
  insert_pacsfile(
    """the rows to be inserted"""
    objects: [pacsfile_insert_input!]!

    """upsert condition"""
    on_conflict: pacsfile_on_conflict
  ): pacsfile_mutation_response

  """
  insert a single row into the table: "pacsfiles_pacsfile"
  """
  insert_pacsfile_one(
    """the row to be inserted"""
    object: pacsfile_insert_input!

    """upsert condition"""
    on_conflict: pacsfile_on_conflict
  ): pacsfile

  """
  insert data into the table: "pipelines_pipeline"
  """
  insert_pipeline(
    """the rows to be inserted"""
    objects: [pipeline_insert_input!]!

    """upsert condition"""
    on_conflict: pipeline_on_conflict
  ): pipeline_mutation_response

  """
  insert a single row into the table: "pipelines_pipeline"
  """
  insert_pipeline_one(
    """the row to be inserted"""
    object: pipeline_insert_input!

    """upsert condition"""
    on_conflict: pipeline_on_conflict
  ): pipeline

  """
  insert data into the table: "plugininstances_plugininstance"
  """
  insert_plugin_instance(
    """the rows to be inserted"""
    objects: [plugin_instance_insert_input!]!

    """upsert condition"""
    on_conflict: plugin_instance_on_conflict
  ): plugin_instance_mutation_response

  """
  insert a single row into the table: "plugininstances_plugininstance"
  """
  insert_plugin_instance_one(
    """the row to be inserted"""
    object: plugin_instance_insert_input!

    """upsert condition"""
    on_conflict: plugin_instance_on_conflict
  ): plugin_instance

  """
  insert data into the table: "plugins_plugin"
  """
  insert_plugins_plugin(
    """the rows to be inserted"""
    objects: [plugins_plugin_insert_input!]!

    """upsert condition"""
    on_conflict: plugins_plugin_on_conflict
  ): plugins_plugin_mutation_response

  """
  insert a single row into the table: "plugins_plugin"
  """
  insert_plugins_plugin_one(
    """the row to be inserted"""
    object: plugins_plugin_insert_input!

    """upsert condition"""
    on_conflict: plugins_plugin_on_conflict
  ): plugins_plugin

  """
  insert data into the table: "plugins_pluginmeta"
  """
  insert_plugins_pluginmeta(
    """the rows to be inserted"""
    objects: [plugins_pluginmeta_insert_input!]!

    """upsert condition"""
    on_conflict: plugins_pluginmeta_on_conflict
  ): plugins_pluginmeta_mutation_response

  """
  insert a single row into the table: "plugins_pluginmeta"
  """
  insert_plugins_pluginmeta_one(
    """the row to be inserted"""
    object: plugins_pluginmeta_insert_input!

    """upsert condition"""
    on_conflict: plugins_pluginmeta_on_conflict
  ): plugins_pluginmeta

  """
  insert data into the table: "workflows_workflow"
  """
  insert_workflow(
    """the rows to be inserted"""
    objects: [workflow_insert_input!]!

    """upsert condition"""
    on_conflict: workflow_on_conflict
  ): workflow_mutation_response

  """
  insert a single row into the table: "workflows_workflow"
  """
  insert_workflow_one(
    """the row to be inserted"""
    object: workflow_insert_input!

    """upsert condition"""
    on_conflict: workflow_on_conflict
  ): workflow

  """
  update data of the table: "feeds_feed"
  """
  update_feed(
    """increments the numeric columns with given value of the filtered values"""
    _inc: feed_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: feed_set_input

    """filter the rows which have to be updated"""
    where: feed_bool_exp!
  ): feed_mutation_response

  """
  update single row of the table: "feeds_feed"
  """
  update_feed_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: feed_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: feed_set_input
    pk_columns: feed_pk_columns_input!
  ): feed

  """
  update multiples rows of table: "feeds_feed"
  """
  update_feed_many(
    """updates to execute, in order"""
    updates: [feed_updates!]!
  ): [feed_mutation_response]

  """
  update data of the table: "plugininstances_plugininstancefile"
  """
  update_file(
    """increments the numeric columns with given value of the filtered values"""
    _inc: file_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: file_set_input

    """filter the rows which have to be updated"""
    where: file_bool_exp!
  ): file_mutation_response

  """
  update single row of the table: "plugininstances_plugininstancefile"
  """
  update_file_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: file_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: file_set_input
    pk_columns: file_pk_columns_input!
  ): file

  """
  update multiples rows of table: "plugininstances_plugininstancefile"
  """
  update_file_many(
    """updates to execute, in order"""
    updates: [file_updates!]!
  ): [file_mutation_response]

  """
  update data of the table: "feeds_note"
  """
  update_note(
    """increments the numeric columns with given value of the filtered values"""
    _inc: note_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: note_set_input

    """filter the rows which have to be updated"""
    where: note_bool_exp!
  ): note_mutation_response

  """
  update single row of the table: "feeds_note"
  """
  update_note_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: note_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: note_set_input
    pk_columns: note_pk_columns_input!
  ): note

  """
  update multiples rows of table: "feeds_note"
  """
  update_note_many(
    """updates to execute, in order"""
    updates: [note_updates!]!
  ): [note_mutation_response]

  """
  update data of the table: "pacsfiles_pacsfile"
  """
  update_pacsfile(
    """increments the numeric columns with given value of the filtered values"""
    _inc: pacsfile_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: pacsfile_set_input

    """filter the rows which have to be updated"""
    where: pacsfile_bool_exp!
  ): pacsfile_mutation_response

  """
  update single row of the table: "pacsfiles_pacsfile"
  """
  update_pacsfile_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: pacsfile_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: pacsfile_set_input
    pk_columns: pacsfile_pk_columns_input!
  ): pacsfile

  """
  update multiples rows of table: "pacsfiles_pacsfile"
  """
  update_pacsfile_many(
    """updates to execute, in order"""
    updates: [pacsfile_updates!]!
  ): [pacsfile_mutation_response]

  """
  update data of the table: "pipelines_pipeline"
  """
  update_pipeline(
    """increments the numeric columns with given value of the filtered values"""
    _inc: pipeline_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: pipeline_set_input

    """filter the rows which have to be updated"""
    where: pipeline_bool_exp!
  ): pipeline_mutation_response

  """
  update single row of the table: "pipelines_pipeline"
  """
  update_pipeline_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: pipeline_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: pipeline_set_input
    pk_columns: pipeline_pk_columns_input!
  ): pipeline

  """
  update multiples rows of table: "pipelines_pipeline"
  """
  update_pipeline_many(
    """updates to execute, in order"""
    updates: [pipeline_updates!]!
  ): [pipeline_mutation_response]

  """
  update data of the table: "plugininstances_plugininstance"
  """
  update_plugin_instance(
    """increments the numeric columns with given value of the filtered values"""
    _inc: plugin_instance_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: plugin_instance_set_input

    """filter the rows which have to be updated"""
    where: plugin_instance_bool_exp!
  ): plugin_instance_mutation_response

  """
  update single row of the table: "plugininstances_plugininstance"
  """
  update_plugin_instance_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: plugin_instance_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: plugin_instance_set_input
    pk_columns: plugin_instance_pk_columns_input!
  ): plugin_instance

  """
  update multiples rows of table: "plugininstances_plugininstance"
  """
  update_plugin_instance_many(
    """updates to execute, in order"""
    updates: [plugin_instance_updates!]!
  ): [plugin_instance_mutation_response]

  """
  update data of the table: "plugins_plugin"
  """
  update_plugins_plugin(
    """increments the numeric columns with given value of the filtered values"""
    _inc: plugins_plugin_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: plugins_plugin_set_input

    """filter the rows which have to be updated"""
    where: plugins_plugin_bool_exp!
  ): plugins_plugin_mutation_response

  """
  update single row of the table: "plugins_plugin"
  """
  update_plugins_plugin_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: plugins_plugin_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: plugins_plugin_set_input
    pk_columns: plugins_plugin_pk_columns_input!
  ): plugins_plugin

  """
  update multiples rows of table: "plugins_plugin"
  """
  update_plugins_plugin_many(
    """updates to execute, in order"""
    updates: [plugins_plugin_updates!]!
  ): [plugins_plugin_mutation_response]

  """
  update data of the table: "plugins_pluginmeta"
  """
  update_plugins_pluginmeta(
    """increments the numeric columns with given value of the filtered values"""
    _inc: plugins_pluginmeta_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: plugins_pluginmeta_set_input

    """filter the rows which have to be updated"""
    where: plugins_pluginmeta_bool_exp!
  ): plugins_pluginmeta_mutation_response

  """
  update single row of the table: "plugins_pluginmeta"
  """
  update_plugins_pluginmeta_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: plugins_pluginmeta_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: plugins_pluginmeta_set_input
    pk_columns: plugins_pluginmeta_pk_columns_input!
  ): plugins_pluginmeta

  """
  update multiples rows of table: "plugins_pluginmeta"
  """
  update_plugins_pluginmeta_many(
    """updates to execute, in order"""
    updates: [plugins_pluginmeta_updates!]!
  ): [plugins_pluginmeta_mutation_response]

  """
  update data of the table: "workflows_workflow"
  """
  update_workflow(
    """increments the numeric columns with given value of the filtered values"""
    _inc: workflow_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: workflow_set_input

    """filter the rows which have to be updated"""
    where: workflow_bool_exp!
  ): workflow_mutation_response

  """
  update single row of the table: "workflows_workflow"
  """
  update_workflow_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: workflow_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: workflow_set_input
    pk_columns: workflow_pk_columns_input!
  ): workflow

  """
  update multiples rows of table: "workflows_workflow"
  """
  update_workflow_many(
    """updates to execute, in order"""
    updates: [workflow_updates!]!
  ): [workflow_mutation_response]
}

"""
columns and relationships of "feeds_note"
"""
type note {
  content: String!
  creation_date: timestamptz!
  feed_id: bigint!

  """An object relationship"""
  feeds_feed: feed!
  id: bigint!
  modification_date: timestamptz!
  title: String!
}

"""
aggregated selection of "feeds_note"
"""
type note_aggregate {
  aggregate: note_aggregate_fields
  nodes: [note!]!
}

"""
aggregate fields of "feeds_note"
"""
type note_aggregate_fields {
  avg: note_avg_fields
  count(columns: [note_select_column!], distinct: Boolean): Int!
  max: note_max_fields
  min: note_min_fields
  stddev: note_stddev_fields
  stddev_pop: note_stddev_pop_fields
  stddev_samp: note_stddev_samp_fields
  sum: note_sum_fields
  var_pop: note_var_pop_fields
  var_samp: note_var_samp_fields
  variance: note_variance_fields
}

"""aggregate avg on columns"""
type note_avg_fields {
  feed_id: Float
  id: Float
}

"""
Boolean expression to filter rows from the table "feeds_note". All fields are combined with a logical 'AND'.
"""
input note_bool_exp {
  _and: [note_bool_exp!]
  _not: note_bool_exp
  _or: [note_bool_exp!]
  content: String_comparison_exp
  creation_date: timestamptz_comparison_exp
  feed_id: bigint_comparison_exp
  feeds_feed: feed_bool_exp
  id: bigint_comparison_exp
  modification_date: timestamptz_comparison_exp
  title: String_comparison_exp
}

"""
unique or primary key constraints on table "feeds_note"
"""
enum note_constraint {
  """
  unique or primary key constraint on columns "feed_id"
  """
  feeds_note_feed_id_key

  """
  unique or primary key constraint on columns "id"
  """
  feeds_note_pkey
}

"""
input type for incrementing numeric columns in table "feeds_note"
"""
input note_inc_input {
  feed_id: bigint
  id: bigint
}

"""
input type for inserting data into table "feeds_note"
"""
input note_insert_input {
  content: String
  creation_date: timestamptz
  feed_id: bigint
  feeds_feed: feed_obj_rel_insert_input
  id: bigint
  modification_date: timestamptz
  title: String
}

"""aggregate max on columns"""
type note_max_fields {
  content: String
  creation_date: timestamptz
  feed_id: bigint
  id: bigint
  modification_date: timestamptz
  title: String
}

"""aggregate min on columns"""
type note_min_fields {
  content: String
  creation_date: timestamptz
  feed_id: bigint
  id: bigint
  modification_date: timestamptz
  title: String
}

"""
response of any mutation on the table "feeds_note"
"""
type note_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [note!]!
}

"""
input type for inserting object relation for remote table "feeds_note"
"""
input note_obj_rel_insert_input {
  data: note_insert_input!

  """upsert condition"""
  on_conflict: note_on_conflict
}

"""
on_conflict condition type for table "feeds_note"
"""
input note_on_conflict {
  constraint: note_constraint!
  update_columns: [note_update_column!]! = []
  where: note_bool_exp
}

"""Ordering options when selecting data from "feeds_note"."""
input note_order_by {
  content: order_by
  creation_date: order_by
  feed_id: order_by
  feeds_feed: feed_order_by
  id: order_by
  modification_date: order_by
  title: order_by
}

"""primary key columns input for table: feeds_note"""
input note_pk_columns_input {
  id: bigint!
}

"""
select columns of table "feeds_note"
"""
enum note_select_column {
  """column name"""
  content

  """column name"""
  creation_date

  """column name"""
  feed_id

  """column name"""
  id

  """column name"""
  modification_date

  """column name"""
  title
}

"""
input type for updating data in table "feeds_note"
"""
input note_set_input {
  content: String
  creation_date: timestamptz
  feed_id: bigint
  id: bigint
  modification_date: timestamptz
  title: String
}

"""aggregate stddev on columns"""
type note_stddev_fields {
  feed_id: Float
  id: Float
}

"""aggregate stddev_pop on columns"""
type note_stddev_pop_fields {
  feed_id: Float
  id: Float
}

"""aggregate stddev_samp on columns"""
type note_stddev_samp_fields {
  feed_id: Float
  id: Float
}

"""
Streaming cursor of the table "note"
"""
input note_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: note_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input note_stream_cursor_value_input {
  content: String
  creation_date: timestamptz
  feed_id: bigint
  id: bigint
  modification_date: timestamptz
  title: String
}

"""aggregate sum on columns"""
type note_sum_fields {
  feed_id: bigint
  id: bigint
}

"""
update columns of table "feeds_note"
"""
enum note_update_column {
  """column name"""
  content

  """column name"""
  creation_date

  """column name"""
  feed_id

  """column name"""
  id

  """column name"""
  modification_date

  """column name"""
  title
}

input note_updates {
  """increments the numeric columns with given value of the filtered values"""
  _inc: note_inc_input

  """sets the columns of the filtered rows to the given values"""
  _set: note_set_input

  """filter the rows which have to be updated"""
  where: note_bool_exp!
}

"""aggregate var_pop on columns"""
type note_var_pop_fields {
  feed_id: Float
  id: Float
}

"""aggregate var_samp on columns"""
type note_var_samp_fields {
  feed_id: Float
  id: Float
}

"""aggregate variance on columns"""
type note_variance_fields {
  feed_id: Float
  id: Float
}

"""column ordering options"""
enum order_by {
  """in ascending order, nulls last"""
  asc

  """in ascending order, nulls first"""
  asc_nulls_first

  """in ascending order, nulls last"""
  asc_nulls_last

  """in descending order, nulls first"""
  desc

  """in descending order, nulls first"""
  desc_nulls_first

  """in descending order, nulls last"""
  desc_nulls_last
}

"""
columns and relationships of "pacsfiles_pacsfile"
"""
type pacsfile {
  AccessionNumber: String!
  Modality: String!
  PatientAge: Int
  PatientBirthDate: date
  PatientID: String!
  PatientName: String!
  PatientSex: String!
  ProtocolName: String!
  SeriesDescription: String!
  SeriesInstanceUID: String!
  StudyDate: date!
  StudyDescription: String!
  StudyInstanceUID: String!
  creation_date: timestamptz!
  fname: String!
  id: bigint!
  pacs_id: bigint!

  """
  A computed field, executes function "relative_download_path"
  """
  relative_download_path: String
}

"""
aggregated selection of "pacsfiles_pacsfile"
"""
type pacsfile_aggregate {
  aggregate: pacsfile_aggregate_fields
  nodes: [pacsfile!]!
}

"""
aggregate fields of "pacsfiles_pacsfile"
"""
type pacsfile_aggregate_fields {
  avg: pacsfile_avg_fields
  count(columns: [pacsfile_select_column!], distinct: Boolean): Int!
  max: pacsfile_max_fields
  min: pacsfile_min_fields
  stddev: pacsfile_stddev_fields
  stddev_pop: pacsfile_stddev_pop_fields
  stddev_samp: pacsfile_stddev_samp_fields
  sum: pacsfile_sum_fields
  var_pop: pacsfile_var_pop_fields
  var_samp: pacsfile_var_samp_fields
  variance: pacsfile_variance_fields
}

"""aggregate avg on columns"""
type pacsfile_avg_fields {
  PatientAge: Float
  id: Float
  pacs_id: Float
}

"""
Boolean expression to filter rows from the table "pacsfiles_pacsfile". All fields are combined with a logical 'AND'.
"""
input pacsfile_bool_exp {
  AccessionNumber: String_comparison_exp
  Modality: String_comparison_exp
  PatientAge: Int_comparison_exp
  PatientBirthDate: date_comparison_exp
  PatientID: String_comparison_exp
  PatientName: String_comparison_exp
  PatientSex: String_comparison_exp
  ProtocolName: String_comparison_exp
  SeriesDescription: String_comparison_exp
  SeriesInstanceUID: String_comparison_exp
  StudyDate: date_comparison_exp
  StudyDescription: String_comparison_exp
  StudyInstanceUID: String_comparison_exp
  _and: [pacsfile_bool_exp!]
  _not: pacsfile_bool_exp
  _or: [pacsfile_bool_exp!]
  creation_date: timestamptz_comparison_exp
  fname: String_comparison_exp
  id: bigint_comparison_exp
  pacs_id: bigint_comparison_exp
  relative_download_path: String_comparison_exp
}

"""
unique or primary key constraints on table "pacsfiles_pacsfile"
"""
enum pacsfile_constraint {
  """
  unique or primary key constraint on columns "fname"
  """
  pacsfiles_pacsfile_fname_key

  """
  unique or primary key constraint on columns "id"
  """
  pacsfiles_pacsfile_pkey
}

"""
input type for incrementing numeric columns in table "pacsfiles_pacsfile"
"""
input pacsfile_inc_input {
  PatientAge: Int
  id: bigint
  pacs_id: bigint
}

"""
input type for inserting data into table "pacsfiles_pacsfile"
"""
input pacsfile_insert_input {
  AccessionNumber: String
  Modality: String
  PatientAge: Int
  PatientBirthDate: date
  PatientID: String
  PatientName: String
  PatientSex: String
  ProtocolName: String
  SeriesDescription: String
  SeriesInstanceUID: String
  StudyDate: date
  StudyDescription: String
  StudyInstanceUID: String
  creation_date: timestamptz
  fname: String
  id: bigint
  pacs_id: bigint
}

"""aggregate max on columns"""
type pacsfile_max_fields {
  AccessionNumber: String
  Modality: String
  PatientAge: Int
  PatientBirthDate: date
  PatientID: String
  PatientName: String
  PatientSex: String
  ProtocolName: String
  SeriesDescription: String
  SeriesInstanceUID: String
  StudyDate: date
  StudyDescription: String
  StudyInstanceUID: String
  creation_date: timestamptz
  fname: String
  id: bigint
  pacs_id: bigint

  """
  A computed field, executes function "relative_download_path"
  """
  relative_download_path: String
}

"""aggregate min on columns"""
type pacsfile_min_fields {
  AccessionNumber: String
  Modality: String
  PatientAge: Int
  PatientBirthDate: date
  PatientID: String
  PatientName: String
  PatientSex: String
  ProtocolName: String
  SeriesDescription: String
  SeriesInstanceUID: String
  StudyDate: date
  StudyDescription: String
  StudyInstanceUID: String
  creation_date: timestamptz
  fname: String
  id: bigint
  pacs_id: bigint

  """
  A computed field, executes function "relative_download_path"
  """
  relative_download_path: String
}

"""
response of any mutation on the table "pacsfiles_pacsfile"
"""
type pacsfile_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [pacsfile!]!
}

"""
on_conflict condition type for table "pacsfiles_pacsfile"
"""
input pacsfile_on_conflict {
  constraint: pacsfile_constraint!
  update_columns: [pacsfile_update_column!]! = []
  where: pacsfile_bool_exp
}

"""Ordering options when selecting data from "pacsfiles_pacsfile"."""
input pacsfile_order_by {
  AccessionNumber: order_by
  Modality: order_by
  PatientAge: order_by
  PatientBirthDate: order_by
  PatientID: order_by
  PatientName: order_by
  PatientSex: order_by
  ProtocolName: order_by
  SeriesDescription: order_by
  SeriesInstanceUID: order_by
  StudyDate: order_by
  StudyDescription: order_by
  StudyInstanceUID: order_by
  creation_date: order_by
  fname: order_by
  id: order_by
  pacs_id: order_by
  relative_download_path: order_by
}

"""primary key columns input for table: pacsfiles_pacsfile"""
input pacsfile_pk_columns_input {
  id: bigint!
}

"""
select columns of table "pacsfiles_pacsfile"
"""
enum pacsfile_select_column {
  """column name"""
  AccessionNumber

  """column name"""
  Modality

  """column name"""
  PatientAge

  """column name"""
  PatientBirthDate

  """column name"""
  PatientID

  """column name"""
  PatientName

  """column name"""
  PatientSex

  """column name"""
  ProtocolName

  """column name"""
  SeriesDescription

  """column name"""
  SeriesInstanceUID

  """column name"""
  StudyDate

  """column name"""
  StudyDescription

  """column name"""
  StudyInstanceUID

  """column name"""
  creation_date

  """column name"""
  fname

  """column name"""
  id

  """column name"""
  pacs_id
}

"""
input type for updating data in table "pacsfiles_pacsfile"
"""
input pacsfile_set_input {
  AccessionNumber: String
  Modality: String
  PatientAge: Int
  PatientBirthDate: date
  PatientID: String
  PatientName: String
  PatientSex: String
  ProtocolName: String
  SeriesDescription: String
  SeriesInstanceUID: String
  StudyDate: date
  StudyDescription: String
  StudyInstanceUID: String
  creation_date: timestamptz
  fname: String
  id: bigint
  pacs_id: bigint
}

"""aggregate stddev on columns"""
type pacsfile_stddev_fields {
  PatientAge: Float
  id: Float
  pacs_id: Float
}

"""aggregate stddev_pop on columns"""
type pacsfile_stddev_pop_fields {
  PatientAge: Float
  id: Float
  pacs_id: Float
}

"""aggregate stddev_samp on columns"""
type pacsfile_stddev_samp_fields {
  PatientAge: Float
  id: Float
  pacs_id: Float
}

"""
Streaming cursor of the table "pacsfile"
"""
input pacsfile_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: pacsfile_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input pacsfile_stream_cursor_value_input {
  AccessionNumber: String
  Modality: String
  PatientAge: Int
  PatientBirthDate: date
  PatientID: String
  PatientName: String
  PatientSex: String
  ProtocolName: String
  SeriesDescription: String
  SeriesInstanceUID: String
  StudyDate: date
  StudyDescription: String
  StudyInstanceUID: String
  creation_date: timestamptz
  fname: String
  id: bigint
  pacs_id: bigint
}

"""aggregate sum on columns"""
type pacsfile_sum_fields {
  PatientAge: Int
  id: bigint
  pacs_id: bigint
}

"""
update columns of table "pacsfiles_pacsfile"
"""
enum pacsfile_update_column {
  """column name"""
  AccessionNumber

  """column name"""
  Modality

  """column name"""
  PatientAge

  """column name"""
  PatientBirthDate

  """column name"""
  PatientID

  """column name"""
  PatientName

  """column name"""
  PatientSex

  """column name"""
  ProtocolName

  """column name"""
  SeriesDescription

  """column name"""
  SeriesInstanceUID

  """column name"""
  StudyDate

  """column name"""
  StudyDescription

  """column name"""
  StudyInstanceUID

  """column name"""
  creation_date

  """column name"""
  fname

  """column name"""
  id

  """column name"""
  pacs_id
}

input pacsfile_updates {
  """increments the numeric columns with given value of the filtered values"""
  _inc: pacsfile_inc_input

  """sets the columns of the filtered rows to the given values"""
  _set: pacsfile_set_input

  """filter the rows which have to be updated"""
  where: pacsfile_bool_exp!
}

"""aggregate var_pop on columns"""
type pacsfile_var_pop_fields {
  PatientAge: Float
  id: Float
  pacs_id: Float
}

"""aggregate var_samp on columns"""
type pacsfile_var_samp_fields {
  PatientAge: Float
  id: Float
  pacs_id: Float
}

"""aggregate variance on columns"""
type pacsfile_variance_fields {
  PatientAge: Float
  id: Float
  pacs_id: Float
}

"""
columns and relationships of "pipelines_pipeline"
"""
type pipeline {
  authors: String!
  category: String!
  creation_date: timestamptz!
  description: String!
  id: bigint!
  locked: Boolean!
  modification_date: timestamptz!
  name: String!
  owner_id: Int

  """An array relationship"""
  workflows(
    """distinct select on columns"""
    distinct_on: [workflow_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [workflow_order_by!]

    """filter the rows returned"""
    where: workflow_bool_exp
  ): [workflow!]!

  """An aggregate relationship"""
  workflows_aggregate(
    """distinct select on columns"""
    distinct_on: [workflow_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [workflow_order_by!]

    """filter the rows returned"""
    where: workflow_bool_exp
  ): workflow_aggregate!
}

"""
aggregated selection of "pipelines_pipeline"
"""
type pipeline_aggregate {
  aggregate: pipeline_aggregate_fields
  nodes: [pipeline!]!
}

"""
aggregate fields of "pipelines_pipeline"
"""
type pipeline_aggregate_fields {
  avg: pipeline_avg_fields
  count(columns: [pipeline_select_column!], distinct: Boolean): Int!
  max: pipeline_max_fields
  min: pipeline_min_fields
  stddev: pipeline_stddev_fields
  stddev_pop: pipeline_stddev_pop_fields
  stddev_samp: pipeline_stddev_samp_fields
  sum: pipeline_sum_fields
  var_pop: pipeline_var_pop_fields
  var_samp: pipeline_var_samp_fields
  variance: pipeline_variance_fields
}

"""aggregate avg on columns"""
type pipeline_avg_fields {
  id: Float
  owner_id: Float
}

"""
Boolean expression to filter rows from the table "pipelines_pipeline". All fields are combined with a logical 'AND'.
"""
input pipeline_bool_exp {
  _and: [pipeline_bool_exp!]
  _not: pipeline_bool_exp
  _or: [pipeline_bool_exp!]
  authors: String_comparison_exp
  category: String_comparison_exp
  creation_date: timestamptz_comparison_exp
  description: String_comparison_exp
  id: bigint_comparison_exp
  locked: Boolean_comparison_exp
  modification_date: timestamptz_comparison_exp
  name: String_comparison_exp
  owner_id: Int_comparison_exp
  workflows: workflow_bool_exp
  workflows_aggregate: workflow_aggregate_bool_exp
}

"""
unique or primary key constraints on table "pipelines_pipeline"
"""
enum pipeline_constraint {
  """
  unique or primary key constraint on columns "name"
  """
  pipelines_pipeline_name_key

  """
  unique or primary key constraint on columns "id"
  """
  pipelines_pipeline_pkey
}

"""
input type for incrementing numeric columns in table "pipelines_pipeline"
"""
input pipeline_inc_input {
  id: bigint
  owner_id: Int
}

"""
input type for inserting data into table "pipelines_pipeline"
"""
input pipeline_insert_input {
  authors: String
  category: String
  creation_date: timestamptz
  description: String
  id: bigint
  locked: Boolean
  modification_date: timestamptz
  name: String
  owner_id: Int
  workflows: workflow_arr_rel_insert_input
}

"""aggregate max on columns"""
type pipeline_max_fields {
  authors: String
  category: String
  creation_date: timestamptz
  description: String
  id: bigint
  modification_date: timestamptz
  name: String
  owner_id: Int
}

"""aggregate min on columns"""
type pipeline_min_fields {
  authors: String
  category: String
  creation_date: timestamptz
  description: String
  id: bigint
  modification_date: timestamptz
  name: String
  owner_id: Int
}

"""
response of any mutation on the table "pipelines_pipeline"
"""
type pipeline_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [pipeline!]!
}

"""
input type for inserting object relation for remote table "pipelines_pipeline"
"""
input pipeline_obj_rel_insert_input {
  data: pipeline_insert_input!

  """upsert condition"""
  on_conflict: pipeline_on_conflict
}

"""
on_conflict condition type for table "pipelines_pipeline"
"""
input pipeline_on_conflict {
  constraint: pipeline_constraint!
  update_columns: [pipeline_update_column!]! = []
  where: pipeline_bool_exp
}

"""Ordering options when selecting data from "pipelines_pipeline"."""
input pipeline_order_by {
  authors: order_by
  category: order_by
  creation_date: order_by
  description: order_by
  id: order_by
  locked: order_by
  modification_date: order_by
  name: order_by
  owner_id: order_by
  workflows_aggregate: workflow_aggregate_order_by
}

"""primary key columns input for table: pipelines_pipeline"""
input pipeline_pk_columns_input {
  id: bigint!
}

"""
select columns of table "pipelines_pipeline"
"""
enum pipeline_select_column {
  """column name"""
  authors

  """column name"""
  category

  """column name"""
  creation_date

  """column name"""
  description

  """column name"""
  id

  """column name"""
  locked

  """column name"""
  modification_date

  """column name"""
  name

  """column name"""
  owner_id
}

"""
input type for updating data in table "pipelines_pipeline"
"""
input pipeline_set_input {
  authors: String
  category: String
  creation_date: timestamptz
  description: String
  id: bigint
  locked: Boolean
  modification_date: timestamptz
  name: String
  owner_id: Int
}

"""aggregate stddev on columns"""
type pipeline_stddev_fields {
  id: Float
  owner_id: Float
}

"""aggregate stddev_pop on columns"""
type pipeline_stddev_pop_fields {
  id: Float
  owner_id: Float
}

"""aggregate stddev_samp on columns"""
type pipeline_stddev_samp_fields {
  id: Float
  owner_id: Float
}

"""
Streaming cursor of the table "pipeline"
"""
input pipeline_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: pipeline_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input pipeline_stream_cursor_value_input {
  authors: String
  category: String
  creation_date: timestamptz
  description: String
  id: bigint
  locked: Boolean
  modification_date: timestamptz
  name: String
  owner_id: Int
}

"""aggregate sum on columns"""
type pipeline_sum_fields {
  id: bigint
  owner_id: Int
}

"""
update columns of table "pipelines_pipeline"
"""
enum pipeline_update_column {
  """column name"""
  authors

  """column name"""
  category

  """column name"""
  creation_date

  """column name"""
  description

  """column name"""
  id

  """column name"""
  locked

  """column name"""
  modification_date

  """column name"""
  name

  """column name"""
  owner_id
}

input pipeline_updates {
  """increments the numeric columns with given value of the filtered values"""
  _inc: pipeline_inc_input

  """sets the columns of the filtered rows to the given values"""
  _set: pipeline_set_input

  """filter the rows which have to be updated"""
  where: pipeline_bool_exp!
}

"""aggregate var_pop on columns"""
type pipeline_var_pop_fields {
  id: Float
  owner_id: Float
}

"""aggregate var_samp on columns"""
type pipeline_var_samp_fields {
  id: Float
  owner_id: Float
}

"""aggregate variance on columns"""
type pipeline_variance_fields {
  id: Float
  owner_id: Float
}

"""
columns and relationships of "plugininstances_plugininstance"
"""
type plugin_instance {
  """An array relationship"""
  children(
    """distinct select on columns"""
    distinct_on: [plugin_instance_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [plugin_instance_order_by!]

    """filter the rows returned"""
    where: plugin_instance_bool_exp
  ): [plugin_instance!]!

  """An aggregate relationship"""
  children_aggregate(
    """distinct select on columns"""
    distinct_on: [plugin_instance_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [plugin_instance_order_by!]

    """filter the rows returned"""
    where: plugin_instance_bool_exp
  ): plugin_instance_aggregate!
  compute_resource_id: bigint
  cpu_limit: Int
  end_date: timestamptz!
  error_code: String!

  """An object relationship"""
  feed: feed!
  feed_id: bigint!

  """An array relationship"""
  files(
    """distinct select on columns"""
    distinct_on: [file_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [file_order_by!]

    """filter the rows returned"""
    where: file_bool_exp
  ): [file!]!

  """An aggregate relationship"""
  files_aggregate(
    """distinct select on columns"""
    distinct_on: [file_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [file_order_by!]

    """filter the rows returned"""
    where: file_bool_exp
  ): file_aggregate!
  gpu_limit: Int
  id: bigint!
  memory_limit: Int
  number_of_workers: Int
  owner_id: Int!
  pipeline_inst_id: bigint

  """An object relationship"""
  plugin: plugins_plugin!
  plugin_id: bigint!

  """An object relationship"""
  previous: plugin_instance
  previous_id: bigint
  raw: String!
  size: bigint!
  start_date: timestamptz!
  status: String!
  summary: String!
  title: String!

  """An object relationship"""
  workflow: workflow
  workflow_id: bigint
}

"""
aggregated selection of "plugininstances_plugininstance"
"""
type plugin_instance_aggregate {
  aggregate: plugin_instance_aggregate_fields
  nodes: [plugin_instance!]!
}

input plugin_instance_aggregate_bool_exp {
  count: plugin_instance_aggregate_bool_exp_count
}

input plugin_instance_aggregate_bool_exp_count {
  arguments: [plugin_instance_select_column!]
  distinct: Boolean
  filter: plugin_instance_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "plugininstances_plugininstance"
"""
type plugin_instance_aggregate_fields {
  avg: plugin_instance_avg_fields
  count(columns: [plugin_instance_select_column!], distinct: Boolean): Int!
  max: plugin_instance_max_fields
  min: plugin_instance_min_fields
  stddev: plugin_instance_stddev_fields
  stddev_pop: plugin_instance_stddev_pop_fields
  stddev_samp: plugin_instance_stddev_samp_fields
  sum: plugin_instance_sum_fields
  var_pop: plugin_instance_var_pop_fields
  var_samp: plugin_instance_var_samp_fields
  variance: plugin_instance_variance_fields
}

"""
order by aggregate values of table "plugininstances_plugininstance"
"""
input plugin_instance_aggregate_order_by {
  avg: plugin_instance_avg_order_by
  count: order_by
  max: plugin_instance_max_order_by
  min: plugin_instance_min_order_by
  stddev: plugin_instance_stddev_order_by
  stddev_pop: plugin_instance_stddev_pop_order_by
  stddev_samp: plugin_instance_stddev_samp_order_by
  sum: plugin_instance_sum_order_by
  var_pop: plugin_instance_var_pop_order_by
  var_samp: plugin_instance_var_samp_order_by
  variance: plugin_instance_variance_order_by
}

"""
input type for inserting array relation for remote table "plugininstances_plugininstance"
"""
input plugin_instance_arr_rel_insert_input {
  data: [plugin_instance_insert_input!]!

  """upsert condition"""
  on_conflict: plugin_instance_on_conflict
}

"""aggregate avg on columns"""
type plugin_instance_avg_fields {
  compute_resource_id: Float
  cpu_limit: Float
  feed_id: Float
  gpu_limit: Float
  id: Float
  memory_limit: Float
  number_of_workers: Float
  owner_id: Float
  pipeline_inst_id: Float
  plugin_id: Float
  previous_id: Float
  size: Float
  workflow_id: Float
}

"""
order by avg() on columns of table "plugininstances_plugininstance"
"""
input plugin_instance_avg_order_by {
  compute_resource_id: order_by
  cpu_limit: order_by
  feed_id: order_by
  gpu_limit: order_by
  id: order_by
  memory_limit: order_by
  number_of_workers: order_by
  owner_id: order_by
  pipeline_inst_id: order_by
  plugin_id: order_by
  previous_id: order_by
  size: order_by
  workflow_id: order_by
}

"""
Boolean expression to filter rows from the table "plugininstances_plugininstance". All fields are combined with a logical 'AND'.
"""
input plugin_instance_bool_exp {
  _and: [plugin_instance_bool_exp!]
  _not: plugin_instance_bool_exp
  _or: [plugin_instance_bool_exp!]
  children: plugin_instance_bool_exp
  children_aggregate: plugin_instance_aggregate_bool_exp
  compute_resource_id: bigint_comparison_exp
  cpu_limit: Int_comparison_exp
  end_date: timestamptz_comparison_exp
  error_code: String_comparison_exp
  feed: feed_bool_exp
  feed_id: bigint_comparison_exp
  files: file_bool_exp
  files_aggregate: file_aggregate_bool_exp
  gpu_limit: Int_comparison_exp
  id: bigint_comparison_exp
  memory_limit: Int_comparison_exp
  number_of_workers: Int_comparison_exp
  owner_id: Int_comparison_exp
  pipeline_inst_id: bigint_comparison_exp
  plugin: plugins_plugin_bool_exp
  plugin_id: bigint_comparison_exp
  previous: plugin_instance_bool_exp
  previous_id: bigint_comparison_exp
  raw: String_comparison_exp
  size: bigint_comparison_exp
  start_date: timestamptz_comparison_exp
  status: String_comparison_exp
  summary: String_comparison_exp
  title: String_comparison_exp
  workflow: workflow_bool_exp
  workflow_id: bigint_comparison_exp
}

"""
unique or primary key constraints on table "plugininstances_plugininstance"
"""
enum plugin_instance_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  plugininstances_plugininstance_pkey
}

"""
input type for incrementing numeric columns in table "plugininstances_plugininstance"
"""
input plugin_instance_inc_input {
  compute_resource_id: bigint
  cpu_limit: Int
  feed_id: bigint
  gpu_limit: Int
  id: bigint
  memory_limit: Int
  number_of_workers: Int
  owner_id: Int
  pipeline_inst_id: bigint
  plugin_id: bigint
  previous_id: bigint
  size: bigint
  workflow_id: bigint
}

"""
input type for inserting data into table "plugininstances_plugininstance"
"""
input plugin_instance_insert_input {
  children: plugin_instance_arr_rel_insert_input
  compute_resource_id: bigint
  cpu_limit: Int
  end_date: timestamptz
  error_code: String
  feed: feed_obj_rel_insert_input
  feed_id: bigint
  files: file_arr_rel_insert_input
  gpu_limit: Int
  id: bigint
  memory_limit: Int
  number_of_workers: Int
  owner_id: Int
  pipeline_inst_id: bigint
  plugin: plugins_plugin_obj_rel_insert_input
  plugin_id: bigint
  previous: plugin_instance_obj_rel_insert_input
  previous_id: bigint
  raw: String
  size: bigint
  start_date: timestamptz
  status: String
  summary: String
  title: String
  workflow: workflow_obj_rel_insert_input
  workflow_id: bigint
}

"""aggregate max on columns"""
type plugin_instance_max_fields {
  compute_resource_id: bigint
  cpu_limit: Int
  end_date: timestamptz
  error_code: String
  feed_id: bigint
  gpu_limit: Int
  id: bigint
  memory_limit: Int
  number_of_workers: Int
  owner_id: Int
  pipeline_inst_id: bigint
  plugin_id: bigint
  previous_id: bigint
  raw: String
  size: bigint
  start_date: timestamptz
  status: String
  summary: String
  title: String
  workflow_id: bigint
}

"""
order by max() on columns of table "plugininstances_plugininstance"
"""
input plugin_instance_max_order_by {
  compute_resource_id: order_by
  cpu_limit: order_by
  end_date: order_by
  error_code: order_by
  feed_id: order_by
  gpu_limit: order_by
  id: order_by
  memory_limit: order_by
  number_of_workers: order_by
  owner_id: order_by
  pipeline_inst_id: order_by
  plugin_id: order_by
  previous_id: order_by
  raw: order_by
  size: order_by
  start_date: order_by
  status: order_by
  summary: order_by
  title: order_by
  workflow_id: order_by
}

"""aggregate min on columns"""
type plugin_instance_min_fields {
  compute_resource_id: bigint
  cpu_limit: Int
  end_date: timestamptz
  error_code: String
  feed_id: bigint
  gpu_limit: Int
  id: bigint
  memory_limit: Int
  number_of_workers: Int
  owner_id: Int
  pipeline_inst_id: bigint
  plugin_id: bigint
  previous_id: bigint
  raw: String
  size: bigint
  start_date: timestamptz
  status: String
  summary: String
  title: String
  workflow_id: bigint
}

"""
order by min() on columns of table "plugininstances_plugininstance"
"""
input plugin_instance_min_order_by {
  compute_resource_id: order_by
  cpu_limit: order_by
  end_date: order_by
  error_code: order_by
  feed_id: order_by
  gpu_limit: order_by
  id: order_by
  memory_limit: order_by
  number_of_workers: order_by
  owner_id: order_by
  pipeline_inst_id: order_by
  plugin_id: order_by
  previous_id: order_by
  raw: order_by
  size: order_by
  start_date: order_by
  status: order_by
  summary: order_by
  title: order_by
  workflow_id: order_by
}

"""
response of any mutation on the table "plugininstances_plugininstance"
"""
type plugin_instance_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [plugin_instance!]!
}

"""
input type for inserting object relation for remote table "plugininstances_plugininstance"
"""
input plugin_instance_obj_rel_insert_input {
  data: plugin_instance_insert_input!

  """upsert condition"""
  on_conflict: plugin_instance_on_conflict
}

"""
on_conflict condition type for table "plugininstances_plugininstance"
"""
input plugin_instance_on_conflict {
  constraint: plugin_instance_constraint!
  update_columns: [plugin_instance_update_column!]! = []
  where: plugin_instance_bool_exp
}

"""
Ordering options when selecting data from "plugininstances_plugininstance".
"""
input plugin_instance_order_by {
  children_aggregate: plugin_instance_aggregate_order_by
  compute_resource_id: order_by
  cpu_limit: order_by
  end_date: order_by
  error_code: order_by
  feed: feed_order_by
  feed_id: order_by
  files_aggregate: file_aggregate_order_by
  gpu_limit: order_by
  id: order_by
  memory_limit: order_by
  number_of_workers: order_by
  owner_id: order_by
  pipeline_inst_id: order_by
  plugin: plugins_plugin_order_by
  plugin_id: order_by
  previous: plugin_instance_order_by
  previous_id: order_by
  raw: order_by
  size: order_by
  start_date: order_by
  status: order_by
  summary: order_by
  title: order_by
  workflow: workflow_order_by
  workflow_id: order_by
}

"""primary key columns input for table: plugininstances_plugininstance"""
input plugin_instance_pk_columns_input {
  id: bigint!
}

"""
select columns of table "plugininstances_plugininstance"
"""
enum plugin_instance_select_column {
  """column name"""
  compute_resource_id

  """column name"""
  cpu_limit

  """column name"""
  end_date

  """column name"""
  error_code

  """column name"""
  feed_id

  """column name"""
  gpu_limit

  """column name"""
  id

  """column name"""
  memory_limit

  """column name"""
  number_of_workers

  """column name"""
  owner_id

  """column name"""
  pipeline_inst_id

  """column name"""
  plugin_id

  """column name"""
  previous_id

  """column name"""
  raw

  """column name"""
  size

  """column name"""
  start_date

  """column name"""
  status

  """column name"""
  summary

  """column name"""
  title

  """column name"""
  workflow_id
}

"""
input type for updating data in table "plugininstances_plugininstance"
"""
input plugin_instance_set_input {
  compute_resource_id: bigint
  cpu_limit: Int
  end_date: timestamptz
  error_code: String
  feed_id: bigint
  gpu_limit: Int
  id: bigint
  memory_limit: Int
  number_of_workers: Int
  owner_id: Int
  pipeline_inst_id: bigint
  plugin_id: bigint
  previous_id: bigint
  raw: String
  size: bigint
  start_date: timestamptz
  status: String
  summary: String
  title: String
  workflow_id: bigint
}

"""aggregate stddev on columns"""
type plugin_instance_stddev_fields {
  compute_resource_id: Float
  cpu_limit: Float
  feed_id: Float
  gpu_limit: Float
  id: Float
  memory_limit: Float
  number_of_workers: Float
  owner_id: Float
  pipeline_inst_id: Float
  plugin_id: Float
  previous_id: Float
  size: Float
  workflow_id: Float
}

"""
order by stddev() on columns of table "plugininstances_plugininstance"
"""
input plugin_instance_stddev_order_by {
  compute_resource_id: order_by
  cpu_limit: order_by
  feed_id: order_by
  gpu_limit: order_by
  id: order_by
  memory_limit: order_by
  number_of_workers: order_by
  owner_id: order_by
  pipeline_inst_id: order_by
  plugin_id: order_by
  previous_id: order_by
  size: order_by
  workflow_id: order_by
}

"""aggregate stddev_pop on columns"""
type plugin_instance_stddev_pop_fields {
  compute_resource_id: Float
  cpu_limit: Float
  feed_id: Float
  gpu_limit: Float
  id: Float
  memory_limit: Float
  number_of_workers: Float
  owner_id: Float
  pipeline_inst_id: Float
  plugin_id: Float
  previous_id: Float
  size: Float
  workflow_id: Float
}

"""
order by stddev_pop() on columns of table "plugininstances_plugininstance"
"""
input plugin_instance_stddev_pop_order_by {
  compute_resource_id: order_by
  cpu_limit: order_by
  feed_id: order_by
  gpu_limit: order_by
  id: order_by
  memory_limit: order_by
  number_of_workers: order_by
  owner_id: order_by
  pipeline_inst_id: order_by
  plugin_id: order_by
  previous_id: order_by
  size: order_by
  workflow_id: order_by
}

"""aggregate stddev_samp on columns"""
type plugin_instance_stddev_samp_fields {
  compute_resource_id: Float
  cpu_limit: Float
  feed_id: Float
  gpu_limit: Float
  id: Float
  memory_limit: Float
  number_of_workers: Float
  owner_id: Float
  pipeline_inst_id: Float
  plugin_id: Float
  previous_id: Float
  size: Float
  workflow_id: Float
}

"""
order by stddev_samp() on columns of table "plugininstances_plugininstance"
"""
input plugin_instance_stddev_samp_order_by {
  compute_resource_id: order_by
  cpu_limit: order_by
  feed_id: order_by
  gpu_limit: order_by
  id: order_by
  memory_limit: order_by
  number_of_workers: order_by
  owner_id: order_by
  pipeline_inst_id: order_by
  plugin_id: order_by
  previous_id: order_by
  size: order_by
  workflow_id: order_by
}

"""
Streaming cursor of the table "plugin_instance"
"""
input plugin_instance_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: plugin_instance_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input plugin_instance_stream_cursor_value_input {
  compute_resource_id: bigint
  cpu_limit: Int
  end_date: timestamptz
  error_code: String
  feed_id: bigint
  gpu_limit: Int
  id: bigint
  memory_limit: Int
  number_of_workers: Int
  owner_id: Int
  pipeline_inst_id: bigint
  plugin_id: bigint
  previous_id: bigint
  raw: String
  size: bigint
  start_date: timestamptz
  status: String
  summary: String
  title: String
  workflow_id: bigint
}

"""aggregate sum on columns"""
type plugin_instance_sum_fields {
  compute_resource_id: bigint
  cpu_limit: Int
  feed_id: bigint
  gpu_limit: Int
  id: bigint
  memory_limit: Int
  number_of_workers: Int
  owner_id: Int
  pipeline_inst_id: bigint
  plugin_id: bigint
  previous_id: bigint
  size: bigint
  workflow_id: bigint
}

"""
order by sum() on columns of table "plugininstances_plugininstance"
"""
input plugin_instance_sum_order_by {
  compute_resource_id: order_by
  cpu_limit: order_by
  feed_id: order_by
  gpu_limit: order_by
  id: order_by
  memory_limit: order_by
  number_of_workers: order_by
  owner_id: order_by
  pipeline_inst_id: order_by
  plugin_id: order_by
  previous_id: order_by
  size: order_by
  workflow_id: order_by
}

"""
update columns of table "plugininstances_plugininstance"
"""
enum plugin_instance_update_column {
  """column name"""
  compute_resource_id

  """column name"""
  cpu_limit

  """column name"""
  end_date

  """column name"""
  error_code

  """column name"""
  feed_id

  """column name"""
  gpu_limit

  """column name"""
  id

  """column name"""
  memory_limit

  """column name"""
  number_of_workers

  """column name"""
  owner_id

  """column name"""
  pipeline_inst_id

  """column name"""
  plugin_id

  """column name"""
  previous_id

  """column name"""
  raw

  """column name"""
  size

  """column name"""
  start_date

  """column name"""
  status

  """column name"""
  summary

  """column name"""
  title

  """column name"""
  workflow_id
}

input plugin_instance_updates {
  """increments the numeric columns with given value of the filtered values"""
  _inc: plugin_instance_inc_input

  """sets the columns of the filtered rows to the given values"""
  _set: plugin_instance_set_input

  """filter the rows which have to be updated"""
  where: plugin_instance_bool_exp!
}

"""aggregate var_pop on columns"""
type plugin_instance_var_pop_fields {
  compute_resource_id: Float
  cpu_limit: Float
  feed_id: Float
  gpu_limit: Float
  id: Float
  memory_limit: Float
  number_of_workers: Float
  owner_id: Float
  pipeline_inst_id: Float
  plugin_id: Float
  previous_id: Float
  size: Float
  workflow_id: Float
}

"""
order by var_pop() on columns of table "plugininstances_plugininstance"
"""
input plugin_instance_var_pop_order_by {
  compute_resource_id: order_by
  cpu_limit: order_by
  feed_id: order_by
  gpu_limit: order_by
  id: order_by
  memory_limit: order_by
  number_of_workers: order_by
  owner_id: order_by
  pipeline_inst_id: order_by
  plugin_id: order_by
  previous_id: order_by
  size: order_by
  workflow_id: order_by
}

"""aggregate var_samp on columns"""
type plugin_instance_var_samp_fields {
  compute_resource_id: Float
  cpu_limit: Float
  feed_id: Float
  gpu_limit: Float
  id: Float
  memory_limit: Float
  number_of_workers: Float
  owner_id: Float
  pipeline_inst_id: Float
  plugin_id: Float
  previous_id: Float
  size: Float
  workflow_id: Float
}

"""
order by var_samp() on columns of table "plugininstances_plugininstance"
"""
input plugin_instance_var_samp_order_by {
  compute_resource_id: order_by
  cpu_limit: order_by
  feed_id: order_by
  gpu_limit: order_by
  id: order_by
  memory_limit: order_by
  number_of_workers: order_by
  owner_id: order_by
  pipeline_inst_id: order_by
  plugin_id: order_by
  previous_id: order_by
  size: order_by
  workflow_id: order_by
}

"""aggregate variance on columns"""
type plugin_instance_variance_fields {
  compute_resource_id: Float
  cpu_limit: Float
  feed_id: Float
  gpu_limit: Float
  id: Float
  memory_limit: Float
  number_of_workers: Float
  owner_id: Float
  pipeline_inst_id: Float
  plugin_id: Float
  previous_id: Float
  size: Float
  workflow_id: Float
}

"""
order by variance() on columns of table "plugininstances_plugininstance"
"""
input plugin_instance_variance_order_by {
  compute_resource_id: order_by
  cpu_limit: order_by
  feed_id: order_by
  gpu_limit: order_by
  id: order_by
  memory_limit: order_by
  number_of_workers: order_by
  owner_id: order_by
  pipeline_inst_id: order_by
  plugin_id: order_by
  previous_id: order_by
  size: order_by
  workflow_id: order_by
}

"""
columns and relationships of "plugins_plugin"
"""
type plugins_plugin {
  creation_date: timestamptz!
  description: String!
  dock_image: String!
  execshell: String!
  id: bigint!
  max_cpu_limit: Int
  max_gpu_limit: Int
  max_memory_limit: Int
  max_number_of_workers: Int

  """An object relationship"""
  meta: plugins_pluginmeta!
  meta_id: bigint!
  min_cpu_limit: Int
  min_gpu_limit: Int
  min_memory_limit: Int
  min_number_of_workers: Int

  """An array relationship"""
  plugin_instances(
    """distinct select on columns"""
    distinct_on: [plugin_instance_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [plugin_instance_order_by!]

    """filter the rows returned"""
    where: plugin_instance_bool_exp
  ): [plugin_instance!]!

  """An aggregate relationship"""
  plugin_instances_aggregate(
    """distinct select on columns"""
    distinct_on: [plugin_instance_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [plugin_instance_order_by!]

    """filter the rows returned"""
    where: plugin_instance_bool_exp
  ): plugin_instance_aggregate!
  selfexec: String!
  selfpath: String!
  version: String!
}

"""
aggregated selection of "plugins_plugin"
"""
type plugins_plugin_aggregate {
  aggregate: plugins_plugin_aggregate_fields
  nodes: [plugins_plugin!]!
}

input plugins_plugin_aggregate_bool_exp {
  count: plugins_plugin_aggregate_bool_exp_count
}

input plugins_plugin_aggregate_bool_exp_count {
  arguments: [plugins_plugin_select_column!]
  distinct: Boolean
  filter: plugins_plugin_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "plugins_plugin"
"""
type plugins_plugin_aggregate_fields {
  avg: plugins_plugin_avg_fields
  count(columns: [plugins_plugin_select_column!], distinct: Boolean): Int!
  max: plugins_plugin_max_fields
  min: plugins_plugin_min_fields
  stddev: plugins_plugin_stddev_fields
  stddev_pop: plugins_plugin_stddev_pop_fields
  stddev_samp: plugins_plugin_stddev_samp_fields
  sum: plugins_plugin_sum_fields
  var_pop: plugins_plugin_var_pop_fields
  var_samp: plugins_plugin_var_samp_fields
  variance: plugins_plugin_variance_fields
}

"""
order by aggregate values of table "plugins_plugin"
"""
input plugins_plugin_aggregate_order_by {
  avg: plugins_plugin_avg_order_by
  count: order_by
  max: plugins_plugin_max_order_by
  min: plugins_plugin_min_order_by
  stddev: plugins_plugin_stddev_order_by
  stddev_pop: plugins_plugin_stddev_pop_order_by
  stddev_samp: plugins_plugin_stddev_samp_order_by
  sum: plugins_plugin_sum_order_by
  var_pop: plugins_plugin_var_pop_order_by
  var_samp: plugins_plugin_var_samp_order_by
  variance: plugins_plugin_variance_order_by
}

"""
input type for inserting array relation for remote table "plugins_plugin"
"""
input plugins_plugin_arr_rel_insert_input {
  data: [plugins_plugin_insert_input!]!

  """upsert condition"""
  on_conflict: plugins_plugin_on_conflict
}

"""aggregate avg on columns"""
type plugins_plugin_avg_fields {
  id: Float
  max_cpu_limit: Float
  max_gpu_limit: Float
  max_memory_limit: Float
  max_number_of_workers: Float
  meta_id: Float
  min_cpu_limit: Float
  min_gpu_limit: Float
  min_memory_limit: Float
  min_number_of_workers: Float
}

"""
order by avg() on columns of table "plugins_plugin"
"""
input plugins_plugin_avg_order_by {
  id: order_by
  max_cpu_limit: order_by
  max_gpu_limit: order_by
  max_memory_limit: order_by
  max_number_of_workers: order_by
  meta_id: order_by
  min_cpu_limit: order_by
  min_gpu_limit: order_by
  min_memory_limit: order_by
  min_number_of_workers: order_by
}

"""
Boolean expression to filter rows from the table "plugins_plugin". All fields are combined with a logical 'AND'.
"""
input plugins_plugin_bool_exp {
  _and: [plugins_plugin_bool_exp!]
  _not: plugins_plugin_bool_exp
  _or: [plugins_plugin_bool_exp!]
  creation_date: timestamptz_comparison_exp
  description: String_comparison_exp
  dock_image: String_comparison_exp
  execshell: String_comparison_exp
  id: bigint_comparison_exp
  max_cpu_limit: Int_comparison_exp
  max_gpu_limit: Int_comparison_exp
  max_memory_limit: Int_comparison_exp
  max_number_of_workers: Int_comparison_exp
  meta: plugins_pluginmeta_bool_exp
  meta_id: bigint_comparison_exp
  min_cpu_limit: Int_comparison_exp
  min_gpu_limit: Int_comparison_exp
  min_memory_limit: Int_comparison_exp
  min_number_of_workers: Int_comparison_exp
  plugin_instances: plugin_instance_bool_exp
  plugin_instances_aggregate: plugin_instance_aggregate_bool_exp
  selfexec: String_comparison_exp
  selfpath: String_comparison_exp
  version: String_comparison_exp
}

"""
unique or primary key constraints on table "plugins_plugin"
"""
enum plugins_plugin_constraint {
  """
  unique or primary key constraint on columns "dock_image", "meta_id"
  """
  plugins_plugin_meta_id_dock_image_d362ec89_uniq

  """
  unique or primary key constraint on columns "meta_id", "version"
  """
  plugins_plugin_meta_id_version_880033ee_uniq

  """
  unique or primary key constraint on columns "id"
  """
  plugins_plugin_pkey
}

"""
input type for incrementing numeric columns in table "plugins_plugin"
"""
input plugins_plugin_inc_input {
  id: bigint
  max_cpu_limit: Int
  max_gpu_limit: Int
  max_memory_limit: Int
  max_number_of_workers: Int
  meta_id: bigint
  min_cpu_limit: Int
  min_gpu_limit: Int
  min_memory_limit: Int
  min_number_of_workers: Int
}

"""
input type for inserting data into table "plugins_plugin"
"""
input plugins_plugin_insert_input {
  creation_date: timestamptz
  description: String
  dock_image: String
  execshell: String
  id: bigint
  max_cpu_limit: Int
  max_gpu_limit: Int
  max_memory_limit: Int
  max_number_of_workers: Int
  meta: plugins_pluginmeta_obj_rel_insert_input
  meta_id: bigint
  min_cpu_limit: Int
  min_gpu_limit: Int
  min_memory_limit: Int
  min_number_of_workers: Int
  plugin_instances: plugin_instance_arr_rel_insert_input
  selfexec: String
  selfpath: String
  version: String
}

"""aggregate max on columns"""
type plugins_plugin_max_fields {
  creation_date: timestamptz
  description: String
  dock_image: String
  execshell: String
  id: bigint
  max_cpu_limit: Int
  max_gpu_limit: Int
  max_memory_limit: Int
  max_number_of_workers: Int
  meta_id: bigint
  min_cpu_limit: Int
  min_gpu_limit: Int
  min_memory_limit: Int
  min_number_of_workers: Int
  selfexec: String
  selfpath: String
  version: String
}

"""
order by max() on columns of table "plugins_plugin"
"""
input plugins_plugin_max_order_by {
  creation_date: order_by
  description: order_by
  dock_image: order_by
  execshell: order_by
  id: order_by
  max_cpu_limit: order_by
  max_gpu_limit: order_by
  max_memory_limit: order_by
  max_number_of_workers: order_by
  meta_id: order_by
  min_cpu_limit: order_by
  min_gpu_limit: order_by
  min_memory_limit: order_by
  min_number_of_workers: order_by
  selfexec: order_by
  selfpath: order_by
  version: order_by
}

"""aggregate min on columns"""
type plugins_plugin_min_fields {
  creation_date: timestamptz
  description: String
  dock_image: String
  execshell: String
  id: bigint
  max_cpu_limit: Int
  max_gpu_limit: Int
  max_memory_limit: Int
  max_number_of_workers: Int
  meta_id: bigint
  min_cpu_limit: Int
  min_gpu_limit: Int
  min_memory_limit: Int
  min_number_of_workers: Int
  selfexec: String
  selfpath: String
  version: String
}

"""
order by min() on columns of table "plugins_plugin"
"""
input plugins_plugin_min_order_by {
  creation_date: order_by
  description: order_by
  dock_image: order_by
  execshell: order_by
  id: order_by
  max_cpu_limit: order_by
  max_gpu_limit: order_by
  max_memory_limit: order_by
  max_number_of_workers: order_by
  meta_id: order_by
  min_cpu_limit: order_by
  min_gpu_limit: order_by
  min_memory_limit: order_by
  min_number_of_workers: order_by
  selfexec: order_by
  selfpath: order_by
  version: order_by
}

"""
response of any mutation on the table "plugins_plugin"
"""
type plugins_plugin_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [plugins_plugin!]!
}

"""
input type for inserting object relation for remote table "plugins_plugin"
"""
input plugins_plugin_obj_rel_insert_input {
  data: plugins_plugin_insert_input!

  """upsert condition"""
  on_conflict: plugins_plugin_on_conflict
}

"""
on_conflict condition type for table "plugins_plugin"
"""
input plugins_plugin_on_conflict {
  constraint: plugins_plugin_constraint!
  update_columns: [plugins_plugin_update_column!]! = []
  where: plugins_plugin_bool_exp
}

"""Ordering options when selecting data from "plugins_plugin"."""
input plugins_plugin_order_by {
  creation_date: order_by
  description: order_by
  dock_image: order_by
  execshell: order_by
  id: order_by
  max_cpu_limit: order_by
  max_gpu_limit: order_by
  max_memory_limit: order_by
  max_number_of_workers: order_by
  meta: plugins_pluginmeta_order_by
  meta_id: order_by
  min_cpu_limit: order_by
  min_gpu_limit: order_by
  min_memory_limit: order_by
  min_number_of_workers: order_by
  plugin_instances_aggregate: plugin_instance_aggregate_order_by
  selfexec: order_by
  selfpath: order_by
  version: order_by
}

"""primary key columns input for table: plugins_plugin"""
input plugins_plugin_pk_columns_input {
  id: bigint!
}

"""
select columns of table "plugins_plugin"
"""
enum plugins_plugin_select_column {
  """column name"""
  creation_date

  """column name"""
  description

  """column name"""
  dock_image

  """column name"""
  execshell

  """column name"""
  id

  """column name"""
  max_cpu_limit

  """column name"""
  max_gpu_limit

  """column name"""
  max_memory_limit

  """column name"""
  max_number_of_workers

  """column name"""
  meta_id

  """column name"""
  min_cpu_limit

  """column name"""
  min_gpu_limit

  """column name"""
  min_memory_limit

  """column name"""
  min_number_of_workers

  """column name"""
  selfexec

  """column name"""
  selfpath

  """column name"""
  version
}

"""
input type for updating data in table "plugins_plugin"
"""
input plugins_plugin_set_input {
  creation_date: timestamptz
  description: String
  dock_image: String
  execshell: String
  id: bigint
  max_cpu_limit: Int
  max_gpu_limit: Int
  max_memory_limit: Int
  max_number_of_workers: Int
  meta_id: bigint
  min_cpu_limit: Int
  min_gpu_limit: Int
  min_memory_limit: Int
  min_number_of_workers: Int
  selfexec: String
  selfpath: String
  version: String
}

"""aggregate stddev on columns"""
type plugins_plugin_stddev_fields {
  id: Float
  max_cpu_limit: Float
  max_gpu_limit: Float
  max_memory_limit: Float
  max_number_of_workers: Float
  meta_id: Float
  min_cpu_limit: Float
  min_gpu_limit: Float
  min_memory_limit: Float
  min_number_of_workers: Float
}

"""
order by stddev() on columns of table "plugins_plugin"
"""
input plugins_plugin_stddev_order_by {
  id: order_by
  max_cpu_limit: order_by
  max_gpu_limit: order_by
  max_memory_limit: order_by
  max_number_of_workers: order_by
  meta_id: order_by
  min_cpu_limit: order_by
  min_gpu_limit: order_by
  min_memory_limit: order_by
  min_number_of_workers: order_by
}

"""aggregate stddev_pop on columns"""
type plugins_plugin_stddev_pop_fields {
  id: Float
  max_cpu_limit: Float
  max_gpu_limit: Float
  max_memory_limit: Float
  max_number_of_workers: Float
  meta_id: Float
  min_cpu_limit: Float
  min_gpu_limit: Float
  min_memory_limit: Float
  min_number_of_workers: Float
}

"""
order by stddev_pop() on columns of table "plugins_plugin"
"""
input plugins_plugin_stddev_pop_order_by {
  id: order_by
  max_cpu_limit: order_by
  max_gpu_limit: order_by
  max_memory_limit: order_by
  max_number_of_workers: order_by
  meta_id: order_by
  min_cpu_limit: order_by
  min_gpu_limit: order_by
  min_memory_limit: order_by
  min_number_of_workers: order_by
}

"""aggregate stddev_samp on columns"""
type plugins_plugin_stddev_samp_fields {
  id: Float
  max_cpu_limit: Float
  max_gpu_limit: Float
  max_memory_limit: Float
  max_number_of_workers: Float
  meta_id: Float
  min_cpu_limit: Float
  min_gpu_limit: Float
  min_memory_limit: Float
  min_number_of_workers: Float
}

"""
order by stddev_samp() on columns of table "plugins_plugin"
"""
input plugins_plugin_stddev_samp_order_by {
  id: order_by
  max_cpu_limit: order_by
  max_gpu_limit: order_by
  max_memory_limit: order_by
  max_number_of_workers: order_by
  meta_id: order_by
  min_cpu_limit: order_by
  min_gpu_limit: order_by
  min_memory_limit: order_by
  min_number_of_workers: order_by
}

"""
Streaming cursor of the table "plugins_plugin"
"""
input plugins_plugin_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: plugins_plugin_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input plugins_plugin_stream_cursor_value_input {
  creation_date: timestamptz
  description: String
  dock_image: String
  execshell: String
  id: bigint
  max_cpu_limit: Int
  max_gpu_limit: Int
  max_memory_limit: Int
  max_number_of_workers: Int
  meta_id: bigint
  min_cpu_limit: Int
  min_gpu_limit: Int
  min_memory_limit: Int
  min_number_of_workers: Int
  selfexec: String
  selfpath: String
  version: String
}

"""aggregate sum on columns"""
type plugins_plugin_sum_fields {
  id: bigint
  max_cpu_limit: Int
  max_gpu_limit: Int
  max_memory_limit: Int
  max_number_of_workers: Int
  meta_id: bigint
  min_cpu_limit: Int
  min_gpu_limit: Int
  min_memory_limit: Int
  min_number_of_workers: Int
}

"""
order by sum() on columns of table "plugins_plugin"
"""
input plugins_plugin_sum_order_by {
  id: order_by
  max_cpu_limit: order_by
  max_gpu_limit: order_by
  max_memory_limit: order_by
  max_number_of_workers: order_by
  meta_id: order_by
  min_cpu_limit: order_by
  min_gpu_limit: order_by
  min_memory_limit: order_by
  min_number_of_workers: order_by
}

"""
update columns of table "plugins_plugin"
"""
enum plugins_plugin_update_column {
  """column name"""
  creation_date

  """column name"""
  description

  """column name"""
  dock_image

  """column name"""
  execshell

  """column name"""
  id

  """column name"""
  max_cpu_limit

  """column name"""
  max_gpu_limit

  """column name"""
  max_memory_limit

  """column name"""
  max_number_of_workers

  """column name"""
  meta_id

  """column name"""
  min_cpu_limit

  """column name"""
  min_gpu_limit

  """column name"""
  min_memory_limit

  """column name"""
  min_number_of_workers

  """column name"""
  selfexec

  """column name"""
  selfpath

  """column name"""
  version
}

input plugins_plugin_updates {
  """increments the numeric columns with given value of the filtered values"""
  _inc: plugins_plugin_inc_input

  """sets the columns of the filtered rows to the given values"""
  _set: plugins_plugin_set_input

  """filter the rows which have to be updated"""
  where: plugins_plugin_bool_exp!
}

"""aggregate var_pop on columns"""
type plugins_plugin_var_pop_fields {
  id: Float
  max_cpu_limit: Float
  max_gpu_limit: Float
  max_memory_limit: Float
  max_number_of_workers: Float
  meta_id: Float
  min_cpu_limit: Float
  min_gpu_limit: Float
  min_memory_limit: Float
  min_number_of_workers: Float
}

"""
order by var_pop() on columns of table "plugins_plugin"
"""
input plugins_plugin_var_pop_order_by {
  id: order_by
  max_cpu_limit: order_by
  max_gpu_limit: order_by
  max_memory_limit: order_by
  max_number_of_workers: order_by
  meta_id: order_by
  min_cpu_limit: order_by
  min_gpu_limit: order_by
  min_memory_limit: order_by
  min_number_of_workers: order_by
}

"""aggregate var_samp on columns"""
type plugins_plugin_var_samp_fields {
  id: Float
  max_cpu_limit: Float
  max_gpu_limit: Float
  max_memory_limit: Float
  max_number_of_workers: Float
  meta_id: Float
  min_cpu_limit: Float
  min_gpu_limit: Float
  min_memory_limit: Float
  min_number_of_workers: Float
}

"""
order by var_samp() on columns of table "plugins_plugin"
"""
input plugins_plugin_var_samp_order_by {
  id: order_by
  max_cpu_limit: order_by
  max_gpu_limit: order_by
  max_memory_limit: order_by
  max_number_of_workers: order_by
  meta_id: order_by
  min_cpu_limit: order_by
  min_gpu_limit: order_by
  min_memory_limit: order_by
  min_number_of_workers: order_by
}

"""aggregate variance on columns"""
type plugins_plugin_variance_fields {
  id: Float
  max_cpu_limit: Float
  max_gpu_limit: Float
  max_memory_limit: Float
  max_number_of_workers: Float
  meta_id: Float
  min_cpu_limit: Float
  min_gpu_limit: Float
  min_memory_limit: Float
  min_number_of_workers: Float
}

"""
order by variance() on columns of table "plugins_plugin"
"""
input plugins_plugin_variance_order_by {
  id: order_by
  max_cpu_limit: order_by
  max_gpu_limit: order_by
  max_memory_limit: order_by
  max_number_of_workers: order_by
  meta_id: order_by
  min_cpu_limit: order_by
  min_gpu_limit: order_by
  min_memory_limit: order_by
  min_number_of_workers: order_by
}

"""
columns and relationships of "plugins_pluginmeta"
"""
type plugins_pluginmeta {
  authors: String!
  category: String!
  creation_date: timestamptz!
  documentation: String!
  icon: String!
  id: bigint!
  license: String!
  modification_date: timestamptz!
  name: String!

  """An array relationship"""
  plugins(
    """distinct select on columns"""
    distinct_on: [plugins_plugin_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [plugins_plugin_order_by!]

    """filter the rows returned"""
    where: plugins_plugin_bool_exp
  ): [plugins_plugin!]!

  """An aggregate relationship"""
  plugins_aggregate(
    """distinct select on columns"""
    distinct_on: [plugins_plugin_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [plugins_plugin_order_by!]

    """filter the rows returned"""
    where: plugins_plugin_bool_exp
  ): plugins_plugin_aggregate!
  public_repo: String!
  stars: Int!
  title: String!
  type: String!
}

"""
aggregated selection of "plugins_pluginmeta"
"""
type plugins_pluginmeta_aggregate {
  aggregate: plugins_pluginmeta_aggregate_fields
  nodes: [plugins_pluginmeta!]!
}

"""
aggregate fields of "plugins_pluginmeta"
"""
type plugins_pluginmeta_aggregate_fields {
  avg: plugins_pluginmeta_avg_fields
  count(columns: [plugins_pluginmeta_select_column!], distinct: Boolean): Int!
  max: plugins_pluginmeta_max_fields
  min: plugins_pluginmeta_min_fields
  stddev: plugins_pluginmeta_stddev_fields
  stddev_pop: plugins_pluginmeta_stddev_pop_fields
  stddev_samp: plugins_pluginmeta_stddev_samp_fields
  sum: plugins_pluginmeta_sum_fields
  var_pop: plugins_pluginmeta_var_pop_fields
  var_samp: plugins_pluginmeta_var_samp_fields
  variance: plugins_pluginmeta_variance_fields
}

"""aggregate avg on columns"""
type plugins_pluginmeta_avg_fields {
  id: Float
  stars: Float
}

"""
Boolean expression to filter rows from the table "plugins_pluginmeta". All fields are combined with a logical 'AND'.
"""
input plugins_pluginmeta_bool_exp {
  _and: [plugins_pluginmeta_bool_exp!]
  _not: plugins_pluginmeta_bool_exp
  _or: [plugins_pluginmeta_bool_exp!]
  authors: String_comparison_exp
  category: String_comparison_exp
  creation_date: timestamptz_comparison_exp
  documentation: String_comparison_exp
  icon: String_comparison_exp
  id: bigint_comparison_exp
  license: String_comparison_exp
  modification_date: timestamptz_comparison_exp
  name: String_comparison_exp
  plugins: plugins_plugin_bool_exp
  plugins_aggregate: plugins_plugin_aggregate_bool_exp
  public_repo: String_comparison_exp
  stars: Int_comparison_exp
  title: String_comparison_exp
  type: String_comparison_exp
}

"""
unique or primary key constraints on table "plugins_pluginmeta"
"""
enum plugins_pluginmeta_constraint {
  """
  unique or primary key constraint on columns "name"
  """
  plugins_pluginmeta_name_key

  """
  unique or primary key constraint on columns "id"
  """
  plugins_pluginmeta_pkey
}

"""
input type for incrementing numeric columns in table "plugins_pluginmeta"
"""
input plugins_pluginmeta_inc_input {
  id: bigint
  stars: Int
}

"""
input type for inserting data into table "plugins_pluginmeta"
"""
input plugins_pluginmeta_insert_input {
  authors: String
  category: String
  creation_date: timestamptz
  documentation: String
  icon: String
  id: bigint
  license: String
  modification_date: timestamptz
  name: String
  plugins: plugins_plugin_arr_rel_insert_input
  public_repo: String
  stars: Int
  title: String
  type: String
}

"""aggregate max on columns"""
type plugins_pluginmeta_max_fields {
  authors: String
  category: String
  creation_date: timestamptz
  documentation: String
  icon: String
  id: bigint
  license: String
  modification_date: timestamptz
  name: String
  public_repo: String
  stars: Int
  title: String
  type: String
}

"""aggregate min on columns"""
type plugins_pluginmeta_min_fields {
  authors: String
  category: String
  creation_date: timestamptz
  documentation: String
  icon: String
  id: bigint
  license: String
  modification_date: timestamptz
  name: String
  public_repo: String
  stars: Int
  title: String
  type: String
}

"""
response of any mutation on the table "plugins_pluginmeta"
"""
type plugins_pluginmeta_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [plugins_pluginmeta!]!
}

"""
input type for inserting object relation for remote table "plugins_pluginmeta"
"""
input plugins_pluginmeta_obj_rel_insert_input {
  data: plugins_pluginmeta_insert_input!

  """upsert condition"""
  on_conflict: plugins_pluginmeta_on_conflict
}

"""
on_conflict condition type for table "plugins_pluginmeta"
"""
input plugins_pluginmeta_on_conflict {
  constraint: plugins_pluginmeta_constraint!
  update_columns: [plugins_pluginmeta_update_column!]! = []
  where: plugins_pluginmeta_bool_exp
}

"""Ordering options when selecting data from "plugins_pluginmeta"."""
input plugins_pluginmeta_order_by {
  authors: order_by
  category: order_by
  creation_date: order_by
  documentation: order_by
  icon: order_by
  id: order_by
  license: order_by
  modification_date: order_by
  name: order_by
  plugins_aggregate: plugins_plugin_aggregate_order_by
  public_repo: order_by
  stars: order_by
  title: order_by
  type: order_by
}

"""primary key columns input for table: plugins_pluginmeta"""
input plugins_pluginmeta_pk_columns_input {
  id: bigint!
}

"""
select columns of table "plugins_pluginmeta"
"""
enum plugins_pluginmeta_select_column {
  """column name"""
  authors

  """column name"""
  category

  """column name"""
  creation_date

  """column name"""
  documentation

  """column name"""
  icon

  """column name"""
  id

  """column name"""
  license

  """column name"""
  modification_date

  """column name"""
  name

  """column name"""
  public_repo

  """column name"""
  stars

  """column name"""
  title

  """column name"""
  type
}

"""
input type for updating data in table "plugins_pluginmeta"
"""
input plugins_pluginmeta_set_input {
  authors: String
  category: String
  creation_date: timestamptz
  documentation: String
  icon: String
  id: bigint
  license: String
  modification_date: timestamptz
  name: String
  public_repo: String
  stars: Int
  title: String
  type: String
}

"""aggregate stddev on columns"""
type plugins_pluginmeta_stddev_fields {
  id: Float
  stars: Float
}

"""aggregate stddev_pop on columns"""
type plugins_pluginmeta_stddev_pop_fields {
  id: Float
  stars: Float
}

"""aggregate stddev_samp on columns"""
type plugins_pluginmeta_stddev_samp_fields {
  id: Float
  stars: Float
}

"""
Streaming cursor of the table "plugins_pluginmeta"
"""
input plugins_pluginmeta_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: plugins_pluginmeta_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input plugins_pluginmeta_stream_cursor_value_input {
  authors: String
  category: String
  creation_date: timestamptz
  documentation: String
  icon: String
  id: bigint
  license: String
  modification_date: timestamptz
  name: String
  public_repo: String
  stars: Int
  title: String
  type: String
}

"""aggregate sum on columns"""
type plugins_pluginmeta_sum_fields {
  id: bigint
  stars: Int
}

"""
update columns of table "plugins_pluginmeta"
"""
enum plugins_pluginmeta_update_column {
  """column name"""
  authors

  """column name"""
  category

  """column name"""
  creation_date

  """column name"""
  documentation

  """column name"""
  icon

  """column name"""
  id

  """column name"""
  license

  """column name"""
  modification_date

  """column name"""
  name

  """column name"""
  public_repo

  """column name"""
  stars

  """column name"""
  title

  """column name"""
  type
}

input plugins_pluginmeta_updates {
  """increments the numeric columns with given value of the filtered values"""
  _inc: plugins_pluginmeta_inc_input

  """sets the columns of the filtered rows to the given values"""
  _set: plugins_pluginmeta_set_input

  """filter the rows which have to be updated"""
  where: plugins_pluginmeta_bool_exp!
}

"""aggregate var_pop on columns"""
type plugins_pluginmeta_var_pop_fields {
  id: Float
  stars: Float
}

"""aggregate var_samp on columns"""
type plugins_pluginmeta_var_samp_fields {
  id: Float
  stars: Float
}

"""aggregate variance on columns"""
type plugins_pluginmeta_variance_fields {
  id: Float
  stars: Float
}

type query_root {
  """
  fetch data from the table: "feeds_feed"
  """
  feed(
    """distinct select on columns"""
    distinct_on: [feed_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [feed_order_by!]

    """filter the rows returned"""
    where: feed_bool_exp
  ): [feed!]!

  """
  fetch aggregated fields from the table: "feeds_feed"
  """
  feed_aggregate(
    """distinct select on columns"""
    distinct_on: [feed_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [feed_order_by!]

    """filter the rows returned"""
    where: feed_bool_exp
  ): feed_aggregate!

  """fetch data from the table: "feeds_feed" using primary key columns"""
  feed_by_pk(id: bigint!): feed

  """
  fetch data from the table: "plugininstances_plugininstancefile"
  """
  file(
    """distinct select on columns"""
    distinct_on: [file_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [file_order_by!]

    """filter the rows returned"""
    where: file_bool_exp
  ): [file!]!

  """
  fetch aggregated fields from the table: "plugininstances_plugininstancefile"
  """
  file_aggregate(
    """distinct select on columns"""
    distinct_on: [file_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [file_order_by!]

    """filter the rows returned"""
    where: file_bool_exp
  ): file_aggregate!

  """
  fetch data from the table: "plugininstances_plugininstancefile" using primary key columns
  """
  file_by_pk(id: bigint!): file

  """
  fetch data from the table: "feeds_note"
  """
  note(
    """distinct select on columns"""
    distinct_on: [note_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [note_order_by!]

    """filter the rows returned"""
    where: note_bool_exp
  ): [note!]!

  """
  fetch aggregated fields from the table: "feeds_note"
  """
  note_aggregate(
    """distinct select on columns"""
    distinct_on: [note_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [note_order_by!]

    """filter the rows returned"""
    where: note_bool_exp
  ): note_aggregate!

  """fetch data from the table: "feeds_note" using primary key columns"""
  note_by_pk(id: bigint!): note

  """
  fetch data from the table: "pacsfiles_pacsfile"
  """
  pacsfile(
    """distinct select on columns"""
    distinct_on: [pacsfile_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pacsfile_order_by!]

    """filter the rows returned"""
    where: pacsfile_bool_exp
  ): [pacsfile!]!

  """
  fetch aggregated fields from the table: "pacsfiles_pacsfile"
  """
  pacsfile_aggregate(
    """distinct select on columns"""
    distinct_on: [pacsfile_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pacsfile_order_by!]

    """filter the rows returned"""
    where: pacsfile_bool_exp
  ): pacsfile_aggregate!

  """
  fetch data from the table: "pacsfiles_pacsfile" using primary key columns
  """
  pacsfile_by_pk(id: bigint!): pacsfile

  """
  fetch data from the table: "pipelines_pipeline"
  """
  pipeline(
    """distinct select on columns"""
    distinct_on: [pipeline_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pipeline_order_by!]

    """filter the rows returned"""
    where: pipeline_bool_exp
  ): [pipeline!]!

  """
  fetch aggregated fields from the table: "pipelines_pipeline"
  """
  pipeline_aggregate(
    """distinct select on columns"""
    distinct_on: [pipeline_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pipeline_order_by!]

    """filter the rows returned"""
    where: pipeline_bool_exp
  ): pipeline_aggregate!

  """
  fetch data from the table: "pipelines_pipeline" using primary key columns
  """
  pipeline_by_pk(id: bigint!): pipeline

  """
  fetch data from the table: "plugininstances_plugininstance"
  """
  plugin_instance(
    """distinct select on columns"""
    distinct_on: [plugin_instance_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [plugin_instance_order_by!]

    """filter the rows returned"""
    where: plugin_instance_bool_exp
  ): [plugin_instance!]!

  """
  fetch aggregated fields from the table: "plugininstances_plugininstance"
  """
  plugin_instance_aggregate(
    """distinct select on columns"""
    distinct_on: [plugin_instance_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [plugin_instance_order_by!]

    """filter the rows returned"""
    where: plugin_instance_bool_exp
  ): plugin_instance_aggregate!

  """
  fetch data from the table: "plugininstances_plugininstance" using primary key columns
  """
  plugin_instance_by_pk(id: bigint!): plugin_instance

  """
  fetch data from the table: "plugins_plugin"
  """
  plugins_plugin(
    """distinct select on columns"""
    distinct_on: [plugins_plugin_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [plugins_plugin_order_by!]

    """filter the rows returned"""
    where: plugins_plugin_bool_exp
  ): [plugins_plugin!]!

  """
  fetch aggregated fields from the table: "plugins_plugin"
  """
  plugins_plugin_aggregate(
    """distinct select on columns"""
    distinct_on: [plugins_plugin_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [plugins_plugin_order_by!]

    """filter the rows returned"""
    where: plugins_plugin_bool_exp
  ): plugins_plugin_aggregate!

  """fetch data from the table: "plugins_plugin" using primary key columns"""
  plugins_plugin_by_pk(id: bigint!): plugins_plugin

  """
  fetch data from the table: "plugins_pluginmeta"
  """
  plugins_pluginmeta(
    """distinct select on columns"""
    distinct_on: [plugins_pluginmeta_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [plugins_pluginmeta_order_by!]

    """filter the rows returned"""
    where: plugins_pluginmeta_bool_exp
  ): [plugins_pluginmeta!]!

  """
  fetch aggregated fields from the table: "plugins_pluginmeta"
  """
  plugins_pluginmeta_aggregate(
    """distinct select on columns"""
    distinct_on: [plugins_pluginmeta_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [plugins_pluginmeta_order_by!]

    """filter the rows returned"""
    where: plugins_pluginmeta_bool_exp
  ): plugins_pluginmeta_aggregate!

  """
  fetch data from the table: "plugins_pluginmeta" using primary key columns
  """
  plugins_pluginmeta_by_pk(id: bigint!): plugins_pluginmeta

  """
  fetch data from the table: "workflows_workflow"
  """
  workflow(
    """distinct select on columns"""
    distinct_on: [workflow_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [workflow_order_by!]

    """filter the rows returned"""
    where: workflow_bool_exp
  ): [workflow!]!

  """
  fetch aggregated fields from the table: "workflows_workflow"
  """
  workflow_aggregate(
    """distinct select on columns"""
    distinct_on: [workflow_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [workflow_order_by!]

    """filter the rows returned"""
    where: workflow_bool_exp
  ): workflow_aggregate!

  """
  fetch data from the table: "workflows_workflow" using primary key columns
  """
  workflow_by_pk(id: bigint!): workflow
}

type subscription_root {
  """
  fetch data from the table: "feeds_feed"
  """
  feed(
    """distinct select on columns"""
    distinct_on: [feed_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [feed_order_by!]

    """filter the rows returned"""
    where: feed_bool_exp
  ): [feed!]!

  """
  fetch aggregated fields from the table: "feeds_feed"
  """
  feed_aggregate(
    """distinct select on columns"""
    distinct_on: [feed_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [feed_order_by!]

    """filter the rows returned"""
    where: feed_bool_exp
  ): feed_aggregate!

  """fetch data from the table: "feeds_feed" using primary key columns"""
  feed_by_pk(id: bigint!): feed

  """
  fetch data from the table in a streaming manner: "feeds_feed"
  """
  feed_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [feed_stream_cursor_input]!

    """filter the rows returned"""
    where: feed_bool_exp
  ): [feed!]!

  """
  fetch data from the table: "plugininstances_plugininstancefile"
  """
  file(
    """distinct select on columns"""
    distinct_on: [file_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [file_order_by!]

    """filter the rows returned"""
    where: file_bool_exp
  ): [file!]!

  """
  fetch aggregated fields from the table: "plugininstances_plugininstancefile"
  """
  file_aggregate(
    """distinct select on columns"""
    distinct_on: [file_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [file_order_by!]

    """filter the rows returned"""
    where: file_bool_exp
  ): file_aggregate!

  """
  fetch data from the table: "plugininstances_plugininstancefile" using primary key columns
  """
  file_by_pk(id: bigint!): file

  """
  fetch data from the table in a streaming manner: "plugininstances_plugininstancefile"
  """
  file_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [file_stream_cursor_input]!

    """filter the rows returned"""
    where: file_bool_exp
  ): [file!]!

  """
  fetch data from the table: "feeds_note"
  """
  note(
    """distinct select on columns"""
    distinct_on: [note_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [note_order_by!]

    """filter the rows returned"""
    where: note_bool_exp
  ): [note!]!

  """
  fetch aggregated fields from the table: "feeds_note"
  """
  note_aggregate(
    """distinct select on columns"""
    distinct_on: [note_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [note_order_by!]

    """filter the rows returned"""
    where: note_bool_exp
  ): note_aggregate!

  """fetch data from the table: "feeds_note" using primary key columns"""
  note_by_pk(id: bigint!): note

  """
  fetch data from the table in a streaming manner: "feeds_note"
  """
  note_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [note_stream_cursor_input]!

    """filter the rows returned"""
    where: note_bool_exp
  ): [note!]!

  """
  fetch data from the table: "pacsfiles_pacsfile"
  """
  pacsfile(
    """distinct select on columns"""
    distinct_on: [pacsfile_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pacsfile_order_by!]

    """filter the rows returned"""
    where: pacsfile_bool_exp
  ): [pacsfile!]!

  """
  fetch aggregated fields from the table: "pacsfiles_pacsfile"
  """
  pacsfile_aggregate(
    """distinct select on columns"""
    distinct_on: [pacsfile_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pacsfile_order_by!]

    """filter the rows returned"""
    where: pacsfile_bool_exp
  ): pacsfile_aggregate!

  """
  fetch data from the table: "pacsfiles_pacsfile" using primary key columns
  """
  pacsfile_by_pk(id: bigint!): pacsfile

  """
  fetch data from the table in a streaming manner: "pacsfiles_pacsfile"
  """
  pacsfile_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [pacsfile_stream_cursor_input]!

    """filter the rows returned"""
    where: pacsfile_bool_exp
  ): [pacsfile!]!

  """
  fetch data from the table: "pipelines_pipeline"
  """
  pipeline(
    """distinct select on columns"""
    distinct_on: [pipeline_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pipeline_order_by!]

    """filter the rows returned"""
    where: pipeline_bool_exp
  ): [pipeline!]!

  """
  fetch aggregated fields from the table: "pipelines_pipeline"
  """
  pipeline_aggregate(
    """distinct select on columns"""
    distinct_on: [pipeline_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pipeline_order_by!]

    """filter the rows returned"""
    where: pipeline_bool_exp
  ): pipeline_aggregate!

  """
  fetch data from the table: "pipelines_pipeline" using primary key columns
  """
  pipeline_by_pk(id: bigint!): pipeline

  """
  fetch data from the table in a streaming manner: "pipelines_pipeline"
  """
  pipeline_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [pipeline_stream_cursor_input]!

    """filter the rows returned"""
    where: pipeline_bool_exp
  ): [pipeline!]!

  """
  fetch data from the table: "plugininstances_plugininstance"
  """
  plugin_instance(
    """distinct select on columns"""
    distinct_on: [plugin_instance_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [plugin_instance_order_by!]

    """filter the rows returned"""
    where: plugin_instance_bool_exp
  ): [plugin_instance!]!

  """
  fetch aggregated fields from the table: "plugininstances_plugininstance"
  """
  plugin_instance_aggregate(
    """distinct select on columns"""
    distinct_on: [plugin_instance_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [plugin_instance_order_by!]

    """filter the rows returned"""
    where: plugin_instance_bool_exp
  ): plugin_instance_aggregate!

  """
  fetch data from the table: "plugininstances_plugininstance" using primary key columns
  """
  plugin_instance_by_pk(id: bigint!): plugin_instance

  """
  fetch data from the table in a streaming manner: "plugininstances_plugininstance"
  """
  plugin_instance_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [plugin_instance_stream_cursor_input]!

    """filter the rows returned"""
    where: plugin_instance_bool_exp
  ): [plugin_instance!]!

  """
  fetch data from the table: "plugins_plugin"
  """
  plugins_plugin(
    """distinct select on columns"""
    distinct_on: [plugins_plugin_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [plugins_plugin_order_by!]

    """filter the rows returned"""
    where: plugins_plugin_bool_exp
  ): [plugins_plugin!]!

  """
  fetch aggregated fields from the table: "plugins_plugin"
  """
  plugins_plugin_aggregate(
    """distinct select on columns"""
    distinct_on: [plugins_plugin_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [plugins_plugin_order_by!]

    """filter the rows returned"""
    where: plugins_plugin_bool_exp
  ): plugins_plugin_aggregate!

  """fetch data from the table: "plugins_plugin" using primary key columns"""
  plugins_plugin_by_pk(id: bigint!): plugins_plugin

  """
  fetch data from the table in a streaming manner: "plugins_plugin"
  """
  plugins_plugin_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [plugins_plugin_stream_cursor_input]!

    """filter the rows returned"""
    where: plugins_plugin_bool_exp
  ): [plugins_plugin!]!

  """
  fetch data from the table: "plugins_pluginmeta"
  """
  plugins_pluginmeta(
    """distinct select on columns"""
    distinct_on: [plugins_pluginmeta_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [plugins_pluginmeta_order_by!]

    """filter the rows returned"""
    where: plugins_pluginmeta_bool_exp
  ): [plugins_pluginmeta!]!

  """
  fetch aggregated fields from the table: "plugins_pluginmeta"
  """
  plugins_pluginmeta_aggregate(
    """distinct select on columns"""
    distinct_on: [plugins_pluginmeta_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [plugins_pluginmeta_order_by!]

    """filter the rows returned"""
    where: plugins_pluginmeta_bool_exp
  ): plugins_pluginmeta_aggregate!

  """
  fetch data from the table: "plugins_pluginmeta" using primary key columns
  """
  plugins_pluginmeta_by_pk(id: bigint!): plugins_pluginmeta

  """
  fetch data from the table in a streaming manner: "plugins_pluginmeta"
  """
  plugins_pluginmeta_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [plugins_pluginmeta_stream_cursor_input]!

    """filter the rows returned"""
    where: plugins_pluginmeta_bool_exp
  ): [plugins_pluginmeta!]!

  """
  fetch data from the table: "workflows_workflow"
  """
  workflow(
    """distinct select on columns"""
    distinct_on: [workflow_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [workflow_order_by!]

    """filter the rows returned"""
    where: workflow_bool_exp
  ): [workflow!]!

  """
  fetch aggregated fields from the table: "workflows_workflow"
  """
  workflow_aggregate(
    """distinct select on columns"""
    distinct_on: [workflow_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [workflow_order_by!]

    """filter the rows returned"""
    where: workflow_bool_exp
  ): workflow_aggregate!

  """
  fetch data from the table: "workflows_workflow" using primary key columns
  """
  workflow_by_pk(id: bigint!): workflow

  """
  fetch data from the table in a streaming manner: "workflows_workflow"
  """
  workflow_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [workflow_stream_cursor_input]!

    """filter the rows returned"""
    where: workflow_bool_exp
  ): [workflow!]!
}

scalar timestamptz

"""
Boolean expression to compare columns of type "timestamptz". All fields are combined with logical 'AND'.
"""
input timestamptz_comparison_exp {
  _eq: timestamptz
  _gt: timestamptz
  _gte: timestamptz
  _in: [timestamptz!]
  _is_null: Boolean
  _lt: timestamptz
  _lte: timestamptz
  _neq: timestamptz
  _nin: [timestamptz!]
}

"""
columns and relationships of "workflows_workflow"
"""
type workflow {
  creation_date: timestamptz!
  id: bigint!
  owner_id: Int!

  """An object relationship"""
  pipeline: pipeline!
  pipeline_id: bigint!

  """An array relationship"""
  plugin_instances(
    """distinct select on columns"""
    distinct_on: [plugin_instance_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [plugin_instance_order_by!]

    """filter the rows returned"""
    where: plugin_instance_bool_exp
  ): [plugin_instance!]!

  """An aggregate relationship"""
  plugin_instances_aggregate(
    """distinct select on columns"""
    distinct_on: [plugin_instance_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [plugin_instance_order_by!]

    """filter the rows returned"""
    where: plugin_instance_bool_exp
  ): plugin_instance_aggregate!
  title: String!
}

"""
aggregated selection of "workflows_workflow"
"""
type workflow_aggregate {
  aggregate: workflow_aggregate_fields
  nodes: [workflow!]!
}

input workflow_aggregate_bool_exp {
  count: workflow_aggregate_bool_exp_count
}

input workflow_aggregate_bool_exp_count {
  arguments: [workflow_select_column!]
  distinct: Boolean
  filter: workflow_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "workflows_workflow"
"""
type workflow_aggregate_fields {
  avg: workflow_avg_fields
  count(columns: [workflow_select_column!], distinct: Boolean): Int!
  max: workflow_max_fields
  min: workflow_min_fields
  stddev: workflow_stddev_fields
  stddev_pop: workflow_stddev_pop_fields
  stddev_samp: workflow_stddev_samp_fields
  sum: workflow_sum_fields
  var_pop: workflow_var_pop_fields
  var_samp: workflow_var_samp_fields
  variance: workflow_variance_fields
}

"""
order by aggregate values of table "workflows_workflow"
"""
input workflow_aggregate_order_by {
  avg: workflow_avg_order_by
  count: order_by
  max: workflow_max_order_by
  min: workflow_min_order_by
  stddev: workflow_stddev_order_by
  stddev_pop: workflow_stddev_pop_order_by
  stddev_samp: workflow_stddev_samp_order_by
  sum: workflow_sum_order_by
  var_pop: workflow_var_pop_order_by
  var_samp: workflow_var_samp_order_by
  variance: workflow_variance_order_by
}

"""
input type for inserting array relation for remote table "workflows_workflow"
"""
input workflow_arr_rel_insert_input {
  data: [workflow_insert_input!]!

  """upsert condition"""
  on_conflict: workflow_on_conflict
}

"""aggregate avg on columns"""
type workflow_avg_fields {
  id: Float
  owner_id: Float
  pipeline_id: Float
}

"""
order by avg() on columns of table "workflows_workflow"
"""
input workflow_avg_order_by {
  id: order_by
  owner_id: order_by
  pipeline_id: order_by
}

"""
Boolean expression to filter rows from the table "workflows_workflow". All fields are combined with a logical 'AND'.
"""
input workflow_bool_exp {
  _and: [workflow_bool_exp!]
  _not: workflow_bool_exp
  _or: [workflow_bool_exp!]
  creation_date: timestamptz_comparison_exp
  id: bigint_comparison_exp
  owner_id: Int_comparison_exp
  pipeline: pipeline_bool_exp
  pipeline_id: bigint_comparison_exp
  plugin_instances: plugin_instance_bool_exp
  plugin_instances_aggregate: plugin_instance_aggregate_bool_exp
  title: String_comparison_exp
}

"""
unique or primary key constraints on table "workflows_workflow"
"""
enum workflow_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  workflows_workflow_pkey
}

"""
input type for incrementing numeric columns in table "workflows_workflow"
"""
input workflow_inc_input {
  id: bigint
  owner_id: Int
  pipeline_id: bigint
}

"""
input type for inserting data into table "workflows_workflow"
"""
input workflow_insert_input {
  creation_date: timestamptz
  id: bigint
  owner_id: Int
  pipeline: pipeline_obj_rel_insert_input
  pipeline_id: bigint
  plugin_instances: plugin_instance_arr_rel_insert_input
  title: String
}

"""aggregate max on columns"""
type workflow_max_fields {
  creation_date: timestamptz
  id: bigint
  owner_id: Int
  pipeline_id: bigint
  title: String
}

"""
order by max() on columns of table "workflows_workflow"
"""
input workflow_max_order_by {
  creation_date: order_by
  id: order_by
  owner_id: order_by
  pipeline_id: order_by
  title: order_by
}

"""aggregate min on columns"""
type workflow_min_fields {
  creation_date: timestamptz
  id: bigint
  owner_id: Int
  pipeline_id: bigint
  title: String
}

"""
order by min() on columns of table "workflows_workflow"
"""
input workflow_min_order_by {
  creation_date: order_by
  id: order_by
  owner_id: order_by
  pipeline_id: order_by
  title: order_by
}

"""
response of any mutation on the table "workflows_workflow"
"""
type workflow_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [workflow!]!
}

"""
input type for inserting object relation for remote table "workflows_workflow"
"""
input workflow_obj_rel_insert_input {
  data: workflow_insert_input!

  """upsert condition"""
  on_conflict: workflow_on_conflict
}

"""
on_conflict condition type for table "workflows_workflow"
"""
input workflow_on_conflict {
  constraint: workflow_constraint!
  update_columns: [workflow_update_column!]! = []
  where: workflow_bool_exp
}

"""Ordering options when selecting data from "workflows_workflow"."""
input workflow_order_by {
  creation_date: order_by
  id: order_by
  owner_id: order_by
  pipeline: pipeline_order_by
  pipeline_id: order_by
  plugin_instances_aggregate: plugin_instance_aggregate_order_by
  title: order_by
}

"""primary key columns input for table: workflows_workflow"""
input workflow_pk_columns_input {
  id: bigint!
}

"""
select columns of table "workflows_workflow"
"""
enum workflow_select_column {
  """column name"""
  creation_date

  """column name"""
  id

  """column name"""
  owner_id

  """column name"""
  pipeline_id

  """column name"""
  title
}

"""
input type for updating data in table "workflows_workflow"
"""
input workflow_set_input {
  creation_date: timestamptz
  id: bigint
  owner_id: Int
  pipeline_id: bigint
  title: String
}

"""aggregate stddev on columns"""
type workflow_stddev_fields {
  id: Float
  owner_id: Float
  pipeline_id: Float
}

"""
order by stddev() on columns of table "workflows_workflow"
"""
input workflow_stddev_order_by {
  id: order_by
  owner_id: order_by
  pipeline_id: order_by
}

"""aggregate stddev_pop on columns"""
type workflow_stddev_pop_fields {
  id: Float
  owner_id: Float
  pipeline_id: Float
}

"""
order by stddev_pop() on columns of table "workflows_workflow"
"""
input workflow_stddev_pop_order_by {
  id: order_by
  owner_id: order_by
  pipeline_id: order_by
}

"""aggregate stddev_samp on columns"""
type workflow_stddev_samp_fields {
  id: Float
  owner_id: Float
  pipeline_id: Float
}

"""
order by stddev_samp() on columns of table "workflows_workflow"
"""
input workflow_stddev_samp_order_by {
  id: order_by
  owner_id: order_by
  pipeline_id: order_by
}

"""
Streaming cursor of the table "workflow"
"""
input workflow_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: workflow_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input workflow_stream_cursor_value_input {
  creation_date: timestamptz
  id: bigint
  owner_id: Int
  pipeline_id: bigint
  title: String
}

"""aggregate sum on columns"""
type workflow_sum_fields {
  id: bigint
  owner_id: Int
  pipeline_id: bigint
}

"""
order by sum() on columns of table "workflows_workflow"
"""
input workflow_sum_order_by {
  id: order_by
  owner_id: order_by
  pipeline_id: order_by
}

"""
update columns of table "workflows_workflow"
"""
enum workflow_update_column {
  """column name"""
  creation_date

  """column name"""
  id

  """column name"""
  owner_id

  """column name"""
  pipeline_id

  """column name"""
  title
}

input workflow_updates {
  """increments the numeric columns with given value of the filtered values"""
  _inc: workflow_inc_input

  """sets the columns of the filtered rows to the given values"""
  _set: workflow_set_input

  """filter the rows which have to be updated"""
  where: workflow_bool_exp!
}

"""aggregate var_pop on columns"""
type workflow_var_pop_fields {
  id: Float
  owner_id: Float
  pipeline_id: Float
}

"""
order by var_pop() on columns of table "workflows_workflow"
"""
input workflow_var_pop_order_by {
  id: order_by
  owner_id: order_by
  pipeline_id: order_by
}

"""aggregate var_samp on columns"""
type workflow_var_samp_fields {
  id: Float
  owner_id: Float
  pipeline_id: Float
}

"""
order by var_samp() on columns of table "workflows_workflow"
"""
input workflow_var_samp_order_by {
  id: order_by
  owner_id: order_by
  pipeline_id: order_by
}

"""aggregate variance on columns"""
type workflow_variance_fields {
  id: Float
  owner_id: Float
  pipeline_id: Float
}

"""
order by variance() on columns of table "workflows_workflow"
"""
input workflow_variance_order_by {
  id: order_by
  owner_id: order_by
  pipeline_id: order_by
}
